'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.296
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("PLProcDeducDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class PLProcDeducDataSet
    Inherits Global.System.Data.DataSet
    
    Private tablePLPlanillas As PLPlanillasDataTable
    
    Private tablePLPlanillasOT As PLPlanillasOTDataTable
    
    Private tablePLDeduccionesDet As PLDeduccionesDetDataTable
    
    Private tablePLDefinicionDeducciones As PLDefinicionDeduccionesDataTable
    
    Private relationFK_PLPlanillasOT_PLPlanillas As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PLPlanillas")) Is Nothing) Then
                MyBase.Tables.Add(New PLPlanillasDataTable(ds.Tables("PLPlanillas")))
            End If
            If (Not (ds.Tables("PLPlanillasOT")) Is Nothing) Then
                MyBase.Tables.Add(New PLPlanillasOTDataTable(ds.Tables("PLPlanillasOT")))
            End If
            If (Not (ds.Tables("PLDeduccionesDet")) Is Nothing) Then
                MyBase.Tables.Add(New PLDeduccionesDetDataTable(ds.Tables("PLDeduccionesDet")))
            End If
            If (Not (ds.Tables("PLDefinicionDeducciones")) Is Nothing) Then
                MyBase.Tables.Add(New PLDefinicionDeduccionesDataTable(ds.Tables("PLDefinicionDeducciones")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PLPlanillas() As PLPlanillasDataTable
        Get
            Return Me.tablePLPlanillas
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PLPlanillasOT() As PLPlanillasOTDataTable
        Get
            Return Me.tablePLPlanillasOT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PLDeduccionesDet() As PLDeduccionesDetDataTable
        Get
            Return Me.tablePLDeduccionesDet
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PLDefinicionDeducciones() As PLDefinicionDeduccionesDataTable
        Get
            Return Me.tablePLDefinicionDeducciones
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As PLProcDeducDataSet = CType(MyBase.Clone,PLProcDeducDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("PLPlanillas")) Is Nothing) Then
                MyBase.Tables.Add(New PLPlanillasDataTable(ds.Tables("PLPlanillas")))
            End If
            If (Not (ds.Tables("PLPlanillasOT")) Is Nothing) Then
                MyBase.Tables.Add(New PLPlanillasOTDataTable(ds.Tables("PLPlanillasOT")))
            End If
            If (Not (ds.Tables("PLDeduccionesDet")) Is Nothing) Then
                MyBase.Tables.Add(New PLDeduccionesDetDataTable(ds.Tables("PLDeduccionesDet")))
            End If
            If (Not (ds.Tables("PLDefinicionDeducciones")) Is Nothing) Then
                MyBase.Tables.Add(New PLDefinicionDeduccionesDataTable(ds.Tables("PLDefinicionDeducciones")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePLPlanillas = CType(MyBase.Tables("PLPlanillas"),PLPlanillasDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePLPlanillas) Is Nothing) Then
                Me.tablePLPlanillas.InitVars
            End If
        End If
        Me.tablePLPlanillasOT = CType(MyBase.Tables("PLPlanillasOT"),PLPlanillasOTDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePLPlanillasOT) Is Nothing) Then
                Me.tablePLPlanillasOT.InitVars
            End If
        End If
        Me.tablePLDeduccionesDet = CType(MyBase.Tables("PLDeduccionesDet"),PLDeduccionesDetDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePLDeduccionesDet) Is Nothing) Then
                Me.tablePLDeduccionesDet.InitVars
            End If
        End If
        Me.tablePLDefinicionDeducciones = CType(MyBase.Tables("PLDefinicionDeducciones"),PLDefinicionDeduccionesDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePLDefinicionDeducciones) Is Nothing) Then
                Me.tablePLDefinicionDeducciones.InitVars
            End If
        End If
        Me.relationFK_PLPlanillasOT_PLPlanillas = Me.Relations("FK_PLPlanillasOT_PLPlanillas")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "PLProcDeducDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PLProcDeducDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePLPlanillas = New PLPlanillasDataTable()
        MyBase.Tables.Add(Me.tablePLPlanillas)
        Me.tablePLPlanillasOT = New PLPlanillasOTDataTable()
        MyBase.Tables.Add(Me.tablePLPlanillasOT)
        Me.tablePLDeduccionesDet = New PLDeduccionesDetDataTable()
        MyBase.Tables.Add(Me.tablePLDeduccionesDet)
        Me.tablePLDefinicionDeducciones = New PLDefinicionDeduccionesDataTable()
        MyBase.Tables.Add(Me.tablePLDefinicionDeducciones)
        Me.relationFK_PLPlanillasOT_PLPlanillas = New Global.System.Data.DataRelation("FK_PLPlanillasOT_PLPlanillas", New Global.System.Data.DataColumn() {Me.tablePLPlanillas.AñoColumn, Me.tablePLPlanillas.MesColumn, Me.tablePLPlanillas.NoPlanillaColumn, Me.tablePLPlanillas.CodigoEmpleadoColumn}, New Global.System.Data.DataColumn() {Me.tablePLPlanillasOT.AñoColumn, Me.tablePLPlanillasOT.MesColumn, Me.tablePLPlanillasOT.NoPlanillaColumn, Me.tablePLPlanillasOT.CodigoEmpleadoColumn}, false)
        Me.Relations.Add(Me.relationFK_PLPlanillasOT_PLPlanillas)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePLPlanillas() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePLPlanillasOT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePLDeduccionesDet() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePLDefinicionDeducciones() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As PLProcDeducDataSet = New PLProcDeducDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PLPlanillasRowChangeEventHandler(ByVal sender As Object, ByVal e As PLPlanillasRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PLPlanillasOTRowChangeEventHandler(ByVal sender As Object, ByVal e As PLPlanillasOTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PLDeduccionesDetRowChangeEventHandler(ByVal sender As Object, ByVal e As PLDeduccionesDetRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PLDefinicionDeduccionesRowChangeEventHandler(ByVal sender As Object, ByVal e As PLDefinicionDeduccionesRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PLPlanillasDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnAño As Global.System.Data.DataColumn
        
        Private columnMes As Global.System.Data.DataColumn
        
        Private columnNoPlanilla As Global.System.Data.DataColumn
        
        Private columnCodigoEmpleado As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PLPlanillas"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AñoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAño
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoPlanillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoPlanilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoEmpleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoEmpleado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PLPlanillasRow
            Get
                Return CType(Me.Rows(index),PLPlanillasRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLPlanillasRowChanging As PLPlanillasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLPlanillasRowChanged As PLPlanillasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLPlanillasRowDeleting As PLPlanillasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLPlanillasRowDeleted As PLPlanillasRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPLPlanillasRow(ByVal row As PLPlanillasRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPLPlanillasRow(ByVal Año As Short, ByVal Mes As Short, ByVal NoPlanilla As Short, ByVal CodigoEmpleado As String) As PLPlanillasRow
            Dim rowPLPlanillasRow As PLPlanillasRow = CType(Me.NewRow,PLPlanillasRow)
            Dim columnValuesArray() As Object = New Object() {Año, Mes, NoPlanilla, CodigoEmpleado}
            rowPLPlanillasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPLPlanillasRow)
            Return rowPLPlanillasRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByAñoMesNoPlanillaCodigoEmpleado(ByVal Año As Short, ByVal Mes As Short, ByVal NoPlanilla As Short, ByVal CodigoEmpleado As String) As PLPlanillasRow
            Return CType(Me.Rows.Find(New Object() {Año, Mes, NoPlanilla, CodigoEmpleado}),PLPlanillasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PLPlanillasDataTable = CType(MyBase.Clone,PLPlanillasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PLPlanillasDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAño = MyBase.Columns("Año")
            Me.columnMes = MyBase.Columns("Mes")
            Me.columnNoPlanilla = MyBase.Columns("NoPlanilla")
            Me.columnCodigoEmpleado = MyBase.Columns("CodigoEmpleado")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAño = New Global.System.Data.DataColumn("Año", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAño)
            Me.columnMes = New Global.System.Data.DataColumn("Mes", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMes)
            Me.columnNoPlanilla = New Global.System.Data.DataColumn("NoPlanilla", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoPlanilla)
            Me.columnCodigoEmpleado = New Global.System.Data.DataColumn("CodigoEmpleado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoEmpleado)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAño, Me.columnMes, Me.columnNoPlanilla, Me.columnCodigoEmpleado}, true))
            Me.columnAño.AllowDBNull = false
            Me.columnMes.AllowDBNull = false
            Me.columnNoPlanilla.AllowDBNull = false
            Me.columnCodigoEmpleado.AllowDBNull = false
            Me.columnCodigoEmpleado.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPLPlanillasRow() As PLPlanillasRow
            Return CType(Me.NewRow,PLPlanillasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PLPlanillasRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PLPlanillasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PLPlanillasRowChangedEvent) Is Nothing) Then
                RaiseEvent PLPlanillasRowChanged(Me, New PLPlanillasRowChangeEvent(CType(e.Row,PLPlanillasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PLPlanillasRowChangingEvent) Is Nothing) Then
                RaiseEvent PLPlanillasRowChanging(Me, New PLPlanillasRowChangeEvent(CType(e.Row,PLPlanillasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PLPlanillasRowDeletedEvent) Is Nothing) Then
                RaiseEvent PLPlanillasRowDeleted(Me, New PLPlanillasRowChangeEvent(CType(e.Row,PLPlanillasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PLPlanillasRowDeletingEvent) Is Nothing) Then
                RaiseEvent PLPlanillasRowDeleting(Me, New PLPlanillasRowChangeEvent(CType(e.Row,PLPlanillasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePLPlanillasRow(ByVal row As PLPlanillasRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PLProcDeducDataSet = New PLProcDeducDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PLPlanillasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PLPlanillasOTDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnAño As Global.System.Data.DataColumn
        
        Private columnMes As Global.System.Data.DataColumn
        
        Private columnNoPlanilla As Global.System.Data.DataColumn
        
        Private columnCodigoSede As Global.System.Data.DataColumn
        
        Private columnCodigoDepartamento As Global.System.Data.DataColumn
        
        Private columnCodigoSeccion As Global.System.Data.DataColumn
        
        Private columnCodigoEmpleado As Global.System.Data.DataColumn
        
        Private columnCodigoDeduccion As Global.System.Data.DataColumn
        
        Private columnCorrelativo As Global.System.Data.DataColumn
        
        Private columnFecha As Global.System.Data.DataColumn
        
        Private columnTipoDeduccion As Global.System.Data.DataColumn
        
        Private columnNoDocumento As Global.System.Data.DataColumn
        
        Private columnValor As Global.System.Data.DataColumn
        
        Private columnAplicada As Global.System.Data.DataColumn
        
        Private columnReferencia As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PLPlanillasOT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AñoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAño
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoPlanillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoPlanilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoSedeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoSede
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoDepartamentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoDepartamento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoSeccionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoSeccion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoEmpleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoEmpleado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoDeduccionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoDeduccion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CorrelativoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCorrelativo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TipoDeduccionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDeduccion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoDocumento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ValorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AplicadaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAplicada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReferenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PLPlanillasOTRow
            Get
                Return CType(Me.Rows(index),PLPlanillasOTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLPlanillasOTRowChanging As PLPlanillasOTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLPlanillasOTRowChanged As PLPlanillasOTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLPlanillasOTRowDeleting As PLPlanillasOTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLPlanillasOTRowDeleted As PLPlanillasOTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPLPlanillasOTRow(ByVal row As PLPlanillasOTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPLPlanillasOTRow(ByVal Año As Short, ByVal Mes As Short, ByVal NoPlanilla As Short, ByVal CodigoSede As String, ByVal CodigoDepartamento As String, ByVal CodigoSeccion As String, ByVal CodigoEmpleado As String, ByVal CodigoDeduccion As String, ByVal Fecha As Date, ByVal TipoDeduccion As Byte, ByVal NoDocumento As Long, ByVal Valor As Decimal, ByVal Aplicada As Boolean, ByVal Referencia As String) As PLPlanillasOTRow
            Dim rowPLPlanillasOTRow As PLPlanillasOTRow = CType(Me.NewRow,PLPlanillasOTRow)
            Dim columnValuesArray() As Object = New Object() {Año, Mes, NoPlanilla, CodigoSede, CodigoDepartamento, CodigoSeccion, CodigoEmpleado, CodigoDeduccion, Nothing, Fecha, TipoDeduccion, NoDocumento, Valor, Aplicada, Referencia}
            rowPLPlanillasOTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPLPlanillasOTRow)
            Return rowPLPlanillasOTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCorrelativo(ByVal Correlativo As Long) As PLPlanillasOTRow
            Return CType(Me.Rows.Find(New Object() {Correlativo}),PLPlanillasOTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PLPlanillasOTDataTable = CType(MyBase.Clone,PLPlanillasOTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PLPlanillasOTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAño = MyBase.Columns("Año")
            Me.columnMes = MyBase.Columns("Mes")
            Me.columnNoPlanilla = MyBase.Columns("NoPlanilla")
            Me.columnCodigoSede = MyBase.Columns("CodigoSede")
            Me.columnCodigoDepartamento = MyBase.Columns("CodigoDepartamento")
            Me.columnCodigoSeccion = MyBase.Columns("CodigoSeccion")
            Me.columnCodigoEmpleado = MyBase.Columns("CodigoEmpleado")
            Me.columnCodigoDeduccion = MyBase.Columns("CodigoDeduccion")
            Me.columnCorrelativo = MyBase.Columns("Correlativo")
            Me.columnFecha = MyBase.Columns("Fecha")
            Me.columnTipoDeduccion = MyBase.Columns("TipoDeduccion")
            Me.columnNoDocumento = MyBase.Columns("NoDocumento")
            Me.columnValor = MyBase.Columns("Valor")
            Me.columnAplicada = MyBase.Columns("Aplicada")
            Me.columnReferencia = MyBase.Columns("Referencia")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAño = New Global.System.Data.DataColumn("Año", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAño)
            Me.columnMes = New Global.System.Data.DataColumn("Mes", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMes)
            Me.columnNoPlanilla = New Global.System.Data.DataColumn("NoPlanilla", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoPlanilla)
            Me.columnCodigoSede = New Global.System.Data.DataColumn("CodigoSede", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoSede)
            Me.columnCodigoDepartamento = New Global.System.Data.DataColumn("CodigoDepartamento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoDepartamento)
            Me.columnCodigoSeccion = New Global.System.Data.DataColumn("CodigoSeccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoSeccion)
            Me.columnCodigoEmpleado = New Global.System.Data.DataColumn("CodigoEmpleado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoEmpleado)
            Me.columnCodigoDeduccion = New Global.System.Data.DataColumn("CodigoDeduccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoDeduccion)
            Me.columnCorrelativo = New Global.System.Data.DataColumn("Correlativo", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCorrelativo)
            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me.columnTipoDeduccion = New Global.System.Data.DataColumn("TipoDeduccion", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDeduccion)
            Me.columnNoDocumento = New Global.System.Data.DataColumn("NoDocumento", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoDocumento)
            Me.columnValor = New Global.System.Data.DataColumn("Valor", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValor)
            Me.columnAplicada = New Global.System.Data.DataColumn("Aplicada", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAplicada)
            Me.columnReferencia = New Global.System.Data.DataColumn("Referencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferencia)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCorrelativo}, true))
            Me.columnAño.AllowDBNull = false
            Me.columnMes.AllowDBNull = false
            Me.columnNoPlanilla.AllowDBNull = false
            Me.columnCodigoSede.MaxLength = 20
            Me.columnCodigoDepartamento.MaxLength = 20
            Me.columnCodigoSeccion.MaxLength = 20
            Me.columnCodigoEmpleado.AllowDBNull = false
            Me.columnCodigoEmpleado.MaxLength = 20
            Me.columnCodigoDeduccion.MaxLength = 20
            Me.columnCorrelativo.AutoIncrement = true
            Me.columnCorrelativo.AutoIncrementSeed = -1
            Me.columnCorrelativo.AutoIncrementStep = -1
            Me.columnCorrelativo.AllowDBNull = false
            Me.columnCorrelativo.ReadOnly = true
            Me.columnCorrelativo.Unique = true
            Me.columnTipoDeduccion.AllowDBNull = false
            Me.columnNoDocumento.AllowDBNull = false
            Me.columnValor.AllowDBNull = false
            Me.columnAplicada.AllowDBNull = false
            Me.columnReferencia.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPLPlanillasOTRow() As PLPlanillasOTRow
            Return CType(Me.NewRow,PLPlanillasOTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PLPlanillasOTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PLPlanillasOTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PLPlanillasOTRowChangedEvent) Is Nothing) Then
                RaiseEvent PLPlanillasOTRowChanged(Me, New PLPlanillasOTRowChangeEvent(CType(e.Row,PLPlanillasOTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PLPlanillasOTRowChangingEvent) Is Nothing) Then
                RaiseEvent PLPlanillasOTRowChanging(Me, New PLPlanillasOTRowChangeEvent(CType(e.Row,PLPlanillasOTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PLPlanillasOTRowDeletedEvent) Is Nothing) Then
                RaiseEvent PLPlanillasOTRowDeleted(Me, New PLPlanillasOTRowChangeEvent(CType(e.Row,PLPlanillasOTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PLPlanillasOTRowDeletingEvent) Is Nothing) Then
                RaiseEvent PLPlanillasOTRowDeleting(Me, New PLPlanillasOTRowChangeEvent(CType(e.Row,PLPlanillasOTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePLPlanillasOTRow(ByVal row As PLPlanillasOTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PLProcDeducDataSet = New PLProcDeducDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PLPlanillasOTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PLDeduccionesDetDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCodigoEmpleado As Global.System.Data.DataColumn
        
        Private columnRAP As Global.System.Data.DataColumn
        
        Private columnSeguro As Global.System.Data.DataColumn
        
        Private columnDeduccion1 As Global.System.Data.DataColumn
        
        Private columnDeduccion2 As Global.System.Data.DataColumn
        
        Private columnDeduccion3 As Global.System.Data.DataColumn
        
        Private columnDeduccion4 As Global.System.Data.DataColumn
        
        Private columnDeduccion5 As Global.System.Data.DataColumn
        
        Private columnDeduccion6 As Global.System.Data.DataColumn
        
        Private columnDeduccion7 As Global.System.Data.DataColumn
        
        Private columnDeduccion8 As Global.System.Data.DataColumn
        
        Private columnDeduccion9 As Global.System.Data.DataColumn
        
        Private columnDeduccion10 As Global.System.Data.DataColumn
        
        Private columnDeduccion11 As Global.System.Data.DataColumn
        
        Private columnDeduccion12 As Global.System.Data.DataColumn
        
        Private columnDeduccion13 As Global.System.Data.DataColumn
        
        Private columnDeduccion14 As Global.System.Data.DataColumn
        
        Private columnDeduccion15 As Global.System.Data.DataColumn
        
        Private columnDeduccion16 As Global.System.Data.DataColumn
        
        Private columnDeduccion17 As Global.System.Data.DataColumn
        
        Private columnDeduccion18 As Global.System.Data.DataColumn
        
        Private columnDeduccion19 As Global.System.Data.DataColumn
        
        Private columnDeduccion20 As Global.System.Data.DataColumn
        
        Private columnDeduccion21 As Global.System.Data.DataColumn
        
        Private columnDeduccion22 As Global.System.Data.DataColumn
        
        Private columnDeduccion23 As Global.System.Data.DataColumn
        
        Private columnDeduccion24 As Global.System.Data.DataColumn
        
        Private columnDeduccion25 As Global.System.Data.DataColumn
        
        Private columnDeduccion26 As Global.System.Data.DataColumn
        
        Private columnDeduccion27 As Global.System.Data.DataColumn
        
        Private columnDeduccion28 As Global.System.Data.DataColumn
        
        Private columnDeduccion29 As Global.System.Data.DataColumn
        
        Private columnDeduccion30 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PLDeduccionesDet"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoEmpleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoEmpleado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SeguroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeguro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion27Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion27
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion29Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion29
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Deduccion30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccion30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PLDeduccionesDetRow
            Get
                Return CType(Me.Rows(index),PLDeduccionesDetRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLDeduccionesDetRowChanging As PLDeduccionesDetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLDeduccionesDetRowChanged As PLDeduccionesDetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLDeduccionesDetRowDeleting As PLDeduccionesDetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLDeduccionesDetRowDeleted As PLDeduccionesDetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPLDeduccionesDetRow(ByVal row As PLDeduccionesDetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPLDeduccionesDetRow( _
                    ByVal CodigoEmpleado As String,  _
                    ByVal RAP As Decimal,  _
                    ByVal Seguro As Decimal,  _
                    ByVal Deduccion1 As Decimal,  _
                    ByVal Deduccion2 As Decimal,  _
                    ByVal Deduccion3 As Decimal,  _
                    ByVal Deduccion4 As Decimal,  _
                    ByVal Deduccion5 As Decimal,  _
                    ByVal Deduccion6 As Decimal,  _
                    ByVal Deduccion7 As Decimal,  _
                    ByVal Deduccion8 As Decimal,  _
                    ByVal Deduccion9 As Decimal,  _
                    ByVal Deduccion10 As Decimal,  _
                    ByVal Deduccion11 As Decimal,  _
                    ByVal Deduccion12 As Decimal,  _
                    ByVal Deduccion13 As Decimal,  _
                    ByVal Deduccion14 As Decimal,  _
                    ByVal Deduccion15 As Decimal,  _
                    ByVal Deduccion16 As Decimal,  _
                    ByVal Deduccion17 As Decimal,  _
                    ByVal Deduccion18 As Decimal,  _
                    ByVal Deduccion19 As Decimal,  _
                    ByVal Deduccion20 As Decimal,  _
                    ByVal Deduccion21 As Decimal,  _
                    ByVal Deduccion22 As Decimal,  _
                    ByVal Deduccion23 As Decimal,  _
                    ByVal Deduccion24 As Decimal,  _
                    ByVal Deduccion25 As Decimal,  _
                    ByVal Deduccion26 As Decimal,  _
                    ByVal Deduccion27 As Decimal,  _
                    ByVal Deduccion28 As Decimal,  _
                    ByVal Deduccion29 As Decimal,  _
                    ByVal Deduccion30 As Decimal) As PLDeduccionesDetRow
            Dim rowPLDeduccionesDetRow As PLDeduccionesDetRow = CType(Me.NewRow,PLDeduccionesDetRow)
            Dim columnValuesArray() As Object = New Object() {CodigoEmpleado, RAP, Seguro, Deduccion1, Deduccion2, Deduccion3, Deduccion4, Deduccion5, Deduccion6, Deduccion7, Deduccion8, Deduccion9, Deduccion10, Deduccion11, Deduccion12, Deduccion13, Deduccion14, Deduccion15, Deduccion16, Deduccion17, Deduccion18, Deduccion19, Deduccion20, Deduccion21, Deduccion22, Deduccion23, Deduccion24, Deduccion25, Deduccion26, Deduccion27, Deduccion28, Deduccion29, Deduccion30}
            rowPLDeduccionesDetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPLDeduccionesDetRow)
            Return rowPLDeduccionesDetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCodigoEmpleado(ByVal CodigoEmpleado As String) As PLDeduccionesDetRow
            Return CType(Me.Rows.Find(New Object() {CodigoEmpleado}),PLDeduccionesDetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PLDeduccionesDetDataTable = CType(MyBase.Clone,PLDeduccionesDetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PLDeduccionesDetDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCodigoEmpleado = MyBase.Columns("CodigoEmpleado")
            Me.columnRAP = MyBase.Columns("RAP")
            Me.columnSeguro = MyBase.Columns("Seguro")
            Me.columnDeduccion1 = MyBase.Columns("Deduccion1")
            Me.columnDeduccion2 = MyBase.Columns("Deduccion2")
            Me.columnDeduccion3 = MyBase.Columns("Deduccion3")
            Me.columnDeduccion4 = MyBase.Columns("Deduccion4")
            Me.columnDeduccion5 = MyBase.Columns("Deduccion5")
            Me.columnDeduccion6 = MyBase.Columns("Deduccion6")
            Me.columnDeduccion7 = MyBase.Columns("Deduccion7")
            Me.columnDeduccion8 = MyBase.Columns("Deduccion8")
            Me.columnDeduccion9 = MyBase.Columns("Deduccion9")
            Me.columnDeduccion10 = MyBase.Columns("Deduccion10")
            Me.columnDeduccion11 = MyBase.Columns("Deduccion11")
            Me.columnDeduccion12 = MyBase.Columns("Deduccion12")
            Me.columnDeduccion13 = MyBase.Columns("Deduccion13")
            Me.columnDeduccion14 = MyBase.Columns("Deduccion14")
            Me.columnDeduccion15 = MyBase.Columns("Deduccion15")
            Me.columnDeduccion16 = MyBase.Columns("Deduccion16")
            Me.columnDeduccion17 = MyBase.Columns("Deduccion17")
            Me.columnDeduccion18 = MyBase.Columns("Deduccion18")
            Me.columnDeduccion19 = MyBase.Columns("Deduccion19")
            Me.columnDeduccion20 = MyBase.Columns("Deduccion20")
            Me.columnDeduccion21 = MyBase.Columns("Deduccion21")
            Me.columnDeduccion22 = MyBase.Columns("Deduccion22")
            Me.columnDeduccion23 = MyBase.Columns("Deduccion23")
            Me.columnDeduccion24 = MyBase.Columns("Deduccion24")
            Me.columnDeduccion25 = MyBase.Columns("Deduccion25")
            Me.columnDeduccion26 = MyBase.Columns("Deduccion26")
            Me.columnDeduccion27 = MyBase.Columns("Deduccion27")
            Me.columnDeduccion28 = MyBase.Columns("Deduccion28")
            Me.columnDeduccion29 = MyBase.Columns("Deduccion29")
            Me.columnDeduccion30 = MyBase.Columns("Deduccion30")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCodigoEmpleado = New Global.System.Data.DataColumn("CodigoEmpleado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoEmpleado)
            Me.columnRAP = New Global.System.Data.DataColumn("RAP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAP)
            Me.columnSeguro = New Global.System.Data.DataColumn("Seguro", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeguro)
            Me.columnDeduccion1 = New Global.System.Data.DataColumn("Deduccion1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion1)
            Me.columnDeduccion2 = New Global.System.Data.DataColumn("Deduccion2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion2)
            Me.columnDeduccion3 = New Global.System.Data.DataColumn("Deduccion3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion3)
            Me.columnDeduccion4 = New Global.System.Data.DataColumn("Deduccion4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion4)
            Me.columnDeduccion5 = New Global.System.Data.DataColumn("Deduccion5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion5)
            Me.columnDeduccion6 = New Global.System.Data.DataColumn("Deduccion6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion6)
            Me.columnDeduccion7 = New Global.System.Data.DataColumn("Deduccion7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion7)
            Me.columnDeduccion8 = New Global.System.Data.DataColumn("Deduccion8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion8)
            Me.columnDeduccion9 = New Global.System.Data.DataColumn("Deduccion9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion9)
            Me.columnDeduccion10 = New Global.System.Data.DataColumn("Deduccion10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion10)
            Me.columnDeduccion11 = New Global.System.Data.DataColumn("Deduccion11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion11)
            Me.columnDeduccion12 = New Global.System.Data.DataColumn("Deduccion12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion12)
            Me.columnDeduccion13 = New Global.System.Data.DataColumn("Deduccion13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion13)
            Me.columnDeduccion14 = New Global.System.Data.DataColumn("Deduccion14", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion14)
            Me.columnDeduccion15 = New Global.System.Data.DataColumn("Deduccion15", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion15)
            Me.columnDeduccion16 = New Global.System.Data.DataColumn("Deduccion16", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion16)
            Me.columnDeduccion17 = New Global.System.Data.DataColumn("Deduccion17", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion17)
            Me.columnDeduccion18 = New Global.System.Data.DataColumn("Deduccion18", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion18)
            Me.columnDeduccion19 = New Global.System.Data.DataColumn("Deduccion19", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion19)
            Me.columnDeduccion20 = New Global.System.Data.DataColumn("Deduccion20", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion20)
            Me.columnDeduccion21 = New Global.System.Data.DataColumn("Deduccion21", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion21)
            Me.columnDeduccion22 = New Global.System.Data.DataColumn("Deduccion22", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion22)
            Me.columnDeduccion23 = New Global.System.Data.DataColumn("Deduccion23", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion23)
            Me.columnDeduccion24 = New Global.System.Data.DataColumn("Deduccion24", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion24)
            Me.columnDeduccion25 = New Global.System.Data.DataColumn("Deduccion25", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion25)
            Me.columnDeduccion26 = New Global.System.Data.DataColumn("Deduccion26", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion26)
            Me.columnDeduccion27 = New Global.System.Data.DataColumn("Deduccion27", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion27)
            Me.columnDeduccion28 = New Global.System.Data.DataColumn("Deduccion28", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion28)
            Me.columnDeduccion29 = New Global.System.Data.DataColumn("Deduccion29", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion29)
            Me.columnDeduccion30 = New Global.System.Data.DataColumn("Deduccion30", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccion30)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCodigoEmpleado}, true))
            Me.columnCodigoEmpleado.AllowDBNull = false
            Me.columnCodigoEmpleado.Unique = true
            Me.columnCodigoEmpleado.MaxLength = 20
            Me.columnRAP.AllowDBNull = false
            Me.columnRAP.DefaultValue = CType(0,Decimal)
            Me.columnSeguro.AllowDBNull = false
            Me.columnSeguro.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion1.AllowDBNull = false
            Me.columnDeduccion1.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion2.AllowDBNull = false
            Me.columnDeduccion2.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion3.AllowDBNull = false
            Me.columnDeduccion3.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion4.AllowDBNull = false
            Me.columnDeduccion4.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion5.AllowDBNull = false
            Me.columnDeduccion5.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion6.AllowDBNull = false
            Me.columnDeduccion6.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion7.AllowDBNull = false
            Me.columnDeduccion7.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion8.AllowDBNull = false
            Me.columnDeduccion8.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion9.AllowDBNull = false
            Me.columnDeduccion9.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion10.AllowDBNull = false
            Me.columnDeduccion10.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion11.AllowDBNull = false
            Me.columnDeduccion11.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion12.AllowDBNull = false
            Me.columnDeduccion12.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion13.AllowDBNull = false
            Me.columnDeduccion13.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion14.AllowDBNull = false
            Me.columnDeduccion14.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion15.AllowDBNull = false
            Me.columnDeduccion15.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion16.AllowDBNull = false
            Me.columnDeduccion16.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion17.AllowDBNull = false
            Me.columnDeduccion17.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion18.AllowDBNull = false
            Me.columnDeduccion18.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion19.AllowDBNull = false
            Me.columnDeduccion19.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion20.AllowDBNull = false
            Me.columnDeduccion20.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion21.AllowDBNull = false
            Me.columnDeduccion21.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion22.AllowDBNull = false
            Me.columnDeduccion22.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion23.AllowDBNull = false
            Me.columnDeduccion23.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion24.AllowDBNull = false
            Me.columnDeduccion24.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion25.AllowDBNull = false
            Me.columnDeduccion25.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion26.AllowDBNull = false
            Me.columnDeduccion26.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion27.AllowDBNull = false
            Me.columnDeduccion27.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion28.AllowDBNull = false
            Me.columnDeduccion28.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion29.AllowDBNull = false
            Me.columnDeduccion29.DefaultValue = CType(0,Decimal)
            Me.columnDeduccion30.AllowDBNull = false
            Me.columnDeduccion30.DefaultValue = CType(0,Decimal)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPLDeduccionesDetRow() As PLDeduccionesDetRow
            Return CType(Me.NewRow,PLDeduccionesDetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PLDeduccionesDetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PLDeduccionesDetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PLDeduccionesDetRowChangedEvent) Is Nothing) Then
                RaiseEvent PLDeduccionesDetRowChanged(Me, New PLDeduccionesDetRowChangeEvent(CType(e.Row,PLDeduccionesDetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PLDeduccionesDetRowChangingEvent) Is Nothing) Then
                RaiseEvent PLDeduccionesDetRowChanging(Me, New PLDeduccionesDetRowChangeEvent(CType(e.Row,PLDeduccionesDetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PLDeduccionesDetRowDeletedEvent) Is Nothing) Then
                RaiseEvent PLDeduccionesDetRowDeleted(Me, New PLDeduccionesDetRowChangeEvent(CType(e.Row,PLDeduccionesDetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PLDeduccionesDetRowDeletingEvent) Is Nothing) Then
                RaiseEvent PLDeduccionesDetRowDeleting(Me, New PLDeduccionesDetRowChangeEvent(CType(e.Row,PLDeduccionesDetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePLDeduccionesDetRow(ByVal row As PLDeduccionesDetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PLProcDeducDataSet = New PLProcDeducDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PLDeduccionesDetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PLDefinicionDeduccionesDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCodigoDeduccion As Global.System.Data.DataColumn
        
        Private columnDescripcionDeduccion As Global.System.Data.DataColumn
        
        Private columnDeduccionPermanente As Global.System.Data.DataColumn
        
        Private columnRepTituloColumna As Global.System.Data.DataColumn
        
        Private columnRepNoColumna As Global.System.Data.DataColumn
        
        Private columnRepTotEnOtrasDeducciones As Global.System.Data.DataColumn
        
        Private columnReciTituloColumna As Global.System.Data.DataColumn
        
        Private columnReciNoPosicion As Global.System.Data.DataColumn
        
        Private columnReciTotEnOtrasDeducciones As Global.System.Data.DataColumn
        
        Private columnAplicarEnPlanillaVacaciones As Global.System.Data.DataColumn
        
        Private columnAplicarEnPlanilla13VO As Global.System.Data.DataColumn
        
        Private columnAplicarEnPlanilla14VO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PLDefinicionDeducciones"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoDeduccionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoDeduccion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescripcionDeduccionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcionDeduccion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DeduccionPermanenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeduccionPermanente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RepTituloColumnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRepTituloColumna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RepNoColumnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRepNoColumna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RepTotEnOtrasDeduccionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRepTotEnOtrasDeducciones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReciTituloColumnaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReciTituloColumna
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReciNoPosicionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReciNoPosicion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReciTotEnOtrasDeduccionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReciTotEnOtrasDeducciones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AplicarEnPlanillaVacacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAplicarEnPlanillaVacaciones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AplicarEnPlanilla13VOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAplicarEnPlanilla13VO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AplicarEnPlanilla14VOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAplicarEnPlanilla14VO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PLDefinicionDeduccionesRow
            Get
                Return CType(Me.Rows(index),PLDefinicionDeduccionesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLDefinicionDeduccionesRowChanging As PLDefinicionDeduccionesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLDefinicionDeduccionesRowChanged As PLDefinicionDeduccionesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLDefinicionDeduccionesRowDeleting As PLDefinicionDeduccionesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PLDefinicionDeduccionesRowDeleted As PLDefinicionDeduccionesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPLDefinicionDeduccionesRow(ByVal row As PLDefinicionDeduccionesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPLDefinicionDeduccionesRow(ByVal CodigoDeduccion As String, ByVal DescripcionDeduccion As String, ByVal DeduccionPermanente As Boolean, ByVal RepTituloColumna As String, ByVal RepNoColumna As Short, ByVal RepTotEnOtrasDeducciones As Boolean, ByVal ReciTituloColumna As String, ByVal ReciNoPosicion As Short, ByVal ReciTotEnOtrasDeducciones As Boolean, ByVal AplicarEnPlanillaVacaciones As Boolean, ByVal AplicarEnPlanilla13VO As Boolean, ByVal AplicarEnPlanilla14VO As Boolean) As PLDefinicionDeduccionesRow
            Dim rowPLDefinicionDeduccionesRow As PLDefinicionDeduccionesRow = CType(Me.NewRow,PLDefinicionDeduccionesRow)
            Dim columnValuesArray() As Object = New Object() {CodigoDeduccion, DescripcionDeduccion, DeduccionPermanente, RepTituloColumna, RepNoColumna, RepTotEnOtrasDeducciones, ReciTituloColumna, ReciNoPosicion, ReciTotEnOtrasDeducciones, AplicarEnPlanillaVacaciones, AplicarEnPlanilla13VO, AplicarEnPlanilla14VO}
            rowPLDefinicionDeduccionesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPLDefinicionDeduccionesRow)
            Return rowPLDefinicionDeduccionesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCodigoDeduccion(ByVal CodigoDeduccion As String) As PLDefinicionDeduccionesRow
            Return CType(Me.Rows.Find(New Object() {CodigoDeduccion}),PLDefinicionDeduccionesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PLDefinicionDeduccionesDataTable = CType(MyBase.Clone,PLDefinicionDeduccionesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PLDefinicionDeduccionesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCodigoDeduccion = MyBase.Columns("CodigoDeduccion")
            Me.columnDescripcionDeduccion = MyBase.Columns("DescripcionDeduccion")
            Me.columnDeduccionPermanente = MyBase.Columns("DeduccionPermanente")
            Me.columnRepTituloColumna = MyBase.Columns("RepTituloColumna")
            Me.columnRepNoColumna = MyBase.Columns("RepNoColumna")
            Me.columnRepTotEnOtrasDeducciones = MyBase.Columns("RepTotEnOtrasDeducciones")
            Me.columnReciTituloColumna = MyBase.Columns("ReciTituloColumna")
            Me.columnReciNoPosicion = MyBase.Columns("ReciNoPosicion")
            Me.columnReciTotEnOtrasDeducciones = MyBase.Columns("ReciTotEnOtrasDeducciones")
            Me.columnAplicarEnPlanillaVacaciones = MyBase.Columns("AplicarEnPlanillaVacaciones")
            Me.columnAplicarEnPlanilla13VO = MyBase.Columns("AplicarEnPlanilla13VO")
            Me.columnAplicarEnPlanilla14VO = MyBase.Columns("AplicarEnPlanilla14VO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCodigoDeduccion = New Global.System.Data.DataColumn("CodigoDeduccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoDeduccion)
            Me.columnDescripcionDeduccion = New Global.System.Data.DataColumn("DescripcionDeduccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcionDeduccion)
            Me.columnDeduccionPermanente = New Global.System.Data.DataColumn("DeduccionPermanente", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeduccionPermanente)
            Me.columnRepTituloColumna = New Global.System.Data.DataColumn("RepTituloColumna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRepTituloColumna)
            Me.columnRepNoColumna = New Global.System.Data.DataColumn("RepNoColumna", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRepNoColumna)
            Me.columnRepTotEnOtrasDeducciones = New Global.System.Data.DataColumn("RepTotEnOtrasDeducciones", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRepTotEnOtrasDeducciones)
            Me.columnReciTituloColumna = New Global.System.Data.DataColumn("ReciTituloColumna", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReciTituloColumna)
            Me.columnReciNoPosicion = New Global.System.Data.DataColumn("ReciNoPosicion", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReciNoPosicion)
            Me.columnReciTotEnOtrasDeducciones = New Global.System.Data.DataColumn("ReciTotEnOtrasDeducciones", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReciTotEnOtrasDeducciones)
            Me.columnAplicarEnPlanillaVacaciones = New Global.System.Data.DataColumn("AplicarEnPlanillaVacaciones", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAplicarEnPlanillaVacaciones)
            Me.columnAplicarEnPlanilla13VO = New Global.System.Data.DataColumn("AplicarEnPlanilla13VO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAplicarEnPlanilla13VO)
            Me.columnAplicarEnPlanilla14VO = New Global.System.Data.DataColumn("AplicarEnPlanilla14VO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAplicarEnPlanilla14VO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCodigoDeduccion}, true))
            Me.columnCodigoDeduccion.AllowDBNull = false
            Me.columnCodigoDeduccion.Unique = true
            Me.columnCodigoDeduccion.MaxLength = 20
            Me.columnDescripcionDeduccion.MaxLength = 30
            Me.columnDeduccionPermanente.AllowDBNull = false
            Me.columnRepTituloColumna.MaxLength = 20
            Me.columnRepNoColumna.AllowDBNull = false
            Me.columnRepTotEnOtrasDeducciones.AllowDBNull = false
            Me.columnReciTituloColumna.MaxLength = 20
            Me.columnReciNoPosicion.AllowDBNull = false
            Me.columnReciTotEnOtrasDeducciones.AllowDBNull = false
            Me.columnAplicarEnPlanillaVacaciones.AllowDBNull = false
            Me.columnAplicarEnPlanilla13VO.AllowDBNull = false
            Me.columnAplicarEnPlanilla14VO.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPLDefinicionDeduccionesRow() As PLDefinicionDeduccionesRow
            Return CType(Me.NewRow,PLDefinicionDeduccionesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PLDefinicionDeduccionesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PLDefinicionDeduccionesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PLDefinicionDeduccionesRowChangedEvent) Is Nothing) Then
                RaiseEvent PLDefinicionDeduccionesRowChanged(Me, New PLDefinicionDeduccionesRowChangeEvent(CType(e.Row,PLDefinicionDeduccionesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PLDefinicionDeduccionesRowChangingEvent) Is Nothing) Then
                RaiseEvent PLDefinicionDeduccionesRowChanging(Me, New PLDefinicionDeduccionesRowChangeEvent(CType(e.Row,PLDefinicionDeduccionesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PLDefinicionDeduccionesRowDeletedEvent) Is Nothing) Then
                RaiseEvent PLDefinicionDeduccionesRowDeleted(Me, New PLDefinicionDeduccionesRowChangeEvent(CType(e.Row,PLDefinicionDeduccionesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PLDefinicionDeduccionesRowDeletingEvent) Is Nothing) Then
                RaiseEvent PLDefinicionDeduccionesRowDeleting(Me, New PLDefinicionDeduccionesRowChangeEvent(CType(e.Row,PLDefinicionDeduccionesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePLDefinicionDeduccionesRow(ByVal row As PLDefinicionDeduccionesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PLProcDeducDataSet = New PLProcDeducDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PLDefinicionDeduccionesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PLPlanillasRow
        Inherits Global.System.Data.DataRow
        
        Private tablePLPlanillas As PLPlanillasDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePLPlanillas = CType(Me.Table,PLPlanillasDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Año() As Short
            Get
                Return CType(Me(Me.tablePLPlanillas.AñoColumn),Short)
            End Get
            Set
                Me(Me.tablePLPlanillas.AñoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mes() As Short
            Get
                Return CType(Me(Me.tablePLPlanillas.MesColumn),Short)
            End Get
            Set
                Me(Me.tablePLPlanillas.MesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoPlanilla() As Short
            Get
                Return CType(Me(Me.tablePLPlanillas.NoPlanillaColumn),Short)
            End Get
            Set
                Me(Me.tablePLPlanillas.NoPlanillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoEmpleado() As String
            Get
                Return CType(Me(Me.tablePLPlanillas.CodigoEmpleadoColumn),String)
            End Get
            Set
                Me(Me.tablePLPlanillas.CodigoEmpleadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPLPlanillasOTRows() As PLPlanillasOTRow()
            If (Me.Table.ChildRelations("FK_PLPlanillasOT_PLPlanillas") Is Nothing) Then
                Return New PLPlanillasOTRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PLPlanillasOT_PLPlanillas")),PLPlanillasOTRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PLPlanillasOTRow
        Inherits Global.System.Data.DataRow
        
        Private tablePLPlanillasOT As PLPlanillasOTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePLPlanillasOT = CType(Me.Table,PLPlanillasOTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Año() As Short
            Get
                Return CType(Me(Me.tablePLPlanillasOT.AñoColumn),Short)
            End Get
            Set
                Me(Me.tablePLPlanillasOT.AñoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mes() As Short
            Get
                Return CType(Me(Me.tablePLPlanillasOT.MesColumn),Short)
            End Get
            Set
                Me(Me.tablePLPlanillasOT.MesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoPlanilla() As Short
            Get
                Return CType(Me(Me.tablePLPlanillasOT.NoPlanillaColumn),Short)
            End Get
            Set
                Me(Me.tablePLPlanillasOT.NoPlanillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoSede() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLPlanillasOT.CodigoSedeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoSede' de la tabla 'PLPlanillasOT' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLPlanillasOT.CodigoSedeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoDepartamento() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLPlanillasOT.CodigoDepartamentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoDepartamento' de la tabla 'PLPlanillasOT' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePLPlanillasOT.CodigoDepartamentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoSeccion() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLPlanillasOT.CodigoSeccionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoSeccion' de la tabla 'PLPlanillasOT' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLPlanillasOT.CodigoSeccionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoEmpleado() As String
            Get
                Return CType(Me(Me.tablePLPlanillasOT.CodigoEmpleadoColumn),String)
            End Get
            Set
                Me(Me.tablePLPlanillasOT.CodigoEmpleadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoDeduccion() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLPlanillasOT.CodigoDeduccionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoDeduccion' de la tabla 'PLPlanillasOT' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLPlanillasOT.CodigoDeduccionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Correlativo() As Long
            Get
                Return CType(Me(Me.tablePLPlanillasOT.CorrelativoColumn),Long)
            End Get
            Set
                Me(Me.tablePLPlanillasOT.CorrelativoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fecha() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePLPlanillasOT.FechaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Fecha' de la tabla 'PLPlanillasOT' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLPlanillasOT.FechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TipoDeduccion() As Byte
            Get
                Return CType(Me(Me.tablePLPlanillasOT.TipoDeduccionColumn),Byte)
            End Get
            Set
                Me(Me.tablePLPlanillasOT.TipoDeduccionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoDocumento() As Long
            Get
                Return CType(Me(Me.tablePLPlanillasOT.NoDocumentoColumn),Long)
            End Get
            Set
                Me(Me.tablePLPlanillasOT.NoDocumentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Valor() As Decimal
            Get
                Return CType(Me(Me.tablePLPlanillasOT.ValorColumn),Decimal)
            End Get
            Set
                Me(Me.tablePLPlanillasOT.ValorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Aplicada() As Boolean
            Get
                Return CType(Me(Me.tablePLPlanillasOT.AplicadaColumn),Boolean)
            End Get
            Set
                Me(Me.tablePLPlanillasOT.AplicadaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Referencia() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLPlanillasOT.ReferenciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Referencia' de la tabla 'PLPlanillasOT' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLPlanillasOT.ReferenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLPlanillasRowParent() As PLPlanillasRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PLPlanillasOT_PLPlanillas")),PLPlanillasRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PLPlanillasOT_PLPlanillas"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCodigoSedeNull() As Boolean
            Return Me.IsNull(Me.tablePLPlanillasOT.CodigoSedeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCodigoSedeNull()
            Me(Me.tablePLPlanillasOT.CodigoSedeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCodigoDepartamentoNull() As Boolean
            Return Me.IsNull(Me.tablePLPlanillasOT.CodigoDepartamentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCodigoDepartamentoNull()
            Me(Me.tablePLPlanillasOT.CodigoDepartamentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCodigoSeccionNull() As Boolean
            Return Me.IsNull(Me.tablePLPlanillasOT.CodigoSeccionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCodigoSeccionNull()
            Me(Me.tablePLPlanillasOT.CodigoSeccionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCodigoDeduccionNull() As Boolean
            Return Me.IsNull(Me.tablePLPlanillasOT.CodigoDeduccionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCodigoDeduccionNull()
            Me(Me.tablePLPlanillasOT.CodigoDeduccionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tablePLPlanillasOT.FechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFechaNull()
            Me(Me.tablePLPlanillasOT.FechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReferenciaNull() As Boolean
            Return Me.IsNull(Me.tablePLPlanillasOT.ReferenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReferenciaNull()
            Me(Me.tablePLPlanillasOT.ReferenciaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PLDeduccionesDetRow
        Inherits Global.System.Data.DataRow
        
        Private tablePLDeduccionesDet As PLDeduccionesDetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePLDeduccionesDet = CType(Me.Table,PLDeduccionesDetDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoEmpleado() As String
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.CodigoEmpleadoColumn),String)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.CodigoEmpleadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RAP() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.RAPColumn),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.RAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Seguro() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.SeguroColumn),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.SeguroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion1() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion1Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion2() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion2Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion3() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion3Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion4() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion4Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion5() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion5Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion6() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion6Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion7() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion7Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion8() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion8Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion9() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion9Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion10() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion10Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion11() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion11Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion12() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion12Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion13() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion13Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion14() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion14Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion15() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion15Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion16() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion16Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion17() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion17Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion18() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion18Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion19() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion19Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion20() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion20Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion21() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion21Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion22() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion22Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion23() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion23Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion24() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion24Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion25() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion25Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion26() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion26Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion26Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion27() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion27Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion27Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion28() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion28Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion29() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion29Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion29Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Deduccion30() As Decimal
            Get
                Return CType(Me(Me.tablePLDeduccionesDet.Deduccion30Column),Decimal)
            End Get
            Set
                Me(Me.tablePLDeduccionesDet.Deduccion30Column) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PLDefinicionDeduccionesRow
        Inherits Global.System.Data.DataRow
        
        Private tablePLDefinicionDeducciones As PLDefinicionDeduccionesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePLDefinicionDeducciones = CType(Me.Table,PLDefinicionDeduccionesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CodigoDeduccion() As String
            Get
                Return CType(Me(Me.tablePLDefinicionDeducciones.CodigoDeduccionColumn),String)
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.CodigoDeduccionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DescripcionDeduccion() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLDefinicionDeducciones.DescripcionDeduccionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescripcionDeduccion' de la tabla 'PLDefinicionDeduccione"& _ 
                            "s' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.DescripcionDeduccionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DeduccionPermanente() As Boolean
            Get
                Return CType(Me(Me.tablePLDefinicionDeducciones.DeduccionPermanenteColumn),Boolean)
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.DeduccionPermanenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RepTituloColumna() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLDefinicionDeducciones.RepTituloColumnaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RepTituloColumna' de la tabla 'PLDefinicionDeducciones' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.RepTituloColumnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RepNoColumna() As Short
            Get
                Return CType(Me(Me.tablePLDefinicionDeducciones.RepNoColumnaColumn),Short)
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.RepNoColumnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RepTotEnOtrasDeducciones() As Boolean
            Get
                Return CType(Me(Me.tablePLDefinicionDeducciones.RepTotEnOtrasDeduccionesColumn),Boolean)
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.RepTotEnOtrasDeduccionesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReciTituloColumna() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLDefinicionDeducciones.ReciTituloColumnaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ReciTituloColumna' de la tabla 'PLDefinicionDeducciones' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.ReciTituloColumnaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReciNoPosicion() As Short
            Get
                Return CType(Me(Me.tablePLDefinicionDeducciones.ReciNoPosicionColumn),Short)
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.ReciNoPosicionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReciTotEnOtrasDeducciones() As Boolean
            Get
                Return CType(Me(Me.tablePLDefinicionDeducciones.ReciTotEnOtrasDeduccionesColumn),Boolean)
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.ReciTotEnOtrasDeduccionesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AplicarEnPlanillaVacaciones() As Boolean
            Get
                Return CType(Me(Me.tablePLDefinicionDeducciones.AplicarEnPlanillaVacacionesColumn),Boolean)
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.AplicarEnPlanillaVacacionesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AplicarEnPlanilla13VO() As Boolean
            Get
                Return CType(Me(Me.tablePLDefinicionDeducciones.AplicarEnPlanilla13VOColumn),Boolean)
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.AplicarEnPlanilla13VOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AplicarEnPlanilla14VO() As Boolean
            Get
                Return CType(Me(Me.tablePLDefinicionDeducciones.AplicarEnPlanilla14VOColumn),Boolean)
            End Get
            Set
                Me(Me.tablePLDefinicionDeducciones.AplicarEnPlanilla14VOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescripcionDeduccionNull() As Boolean
            Return Me.IsNull(Me.tablePLDefinicionDeducciones.DescripcionDeduccionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescripcionDeduccionNull()
            Me(Me.tablePLDefinicionDeducciones.DescripcionDeduccionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRepTituloColumnaNull() As Boolean
            Return Me.IsNull(Me.tablePLDefinicionDeducciones.RepTituloColumnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRepTituloColumnaNull()
            Me(Me.tablePLDefinicionDeducciones.RepTituloColumnaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReciTituloColumnaNull() As Boolean
            Return Me.IsNull(Me.tablePLDefinicionDeducciones.ReciTituloColumnaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReciTituloColumnaNull()
            Me(Me.tablePLDefinicionDeducciones.ReciTituloColumnaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PLPlanillasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PLPlanillasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PLPlanillasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PLPlanillasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PLPlanillasOTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PLPlanillasOTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PLPlanillasOTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PLPlanillasOTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PLDeduccionesDetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PLDeduccionesDetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PLDeduccionesDetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PLDeduccionesDetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PLDefinicionDeduccionesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PLDefinicionDeduccionesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PLDefinicionDeduccionesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PLDefinicionDeduccionesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace PLProcDeducDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PLPlanillasTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PLPlanillas"
            tableMapping.ColumnMappings.Add("Año", "Año")
            tableMapping.ColumnMappings.Add("Mes", "Mes")
            tableMapping.ColumnMappings.Add("NoPlanilla", "NoPlanilla")
            tableMapping.ColumnMappings.Add("CodigoEmpleado", "CodigoEmpleado")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.RSIContab.My.MySettings.Default.RSIERP_Conexion
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Año, Mes, NoPlanilla, CodigoEmpleado"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         PLPlanillas"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE "& _ 
                "    (Año = @Año) AND (Mes = @Mes) AND (NoPlanilla = @NoPlanilla)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Año, "& _ 
                "Mes, NoPlanilla, CodigoEmpleado"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Año", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Año", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mes", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Mes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoPlanilla", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "NoPlanilla", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PLProcDeducDataSet.PLPlanillasDataTable, ByVal Año As Short, ByVal Mes As Short, ByVal NoPlanilla As Short) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Año,Short)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Mes,Short)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(NoPlanilla,Short)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Año As Short, ByVal Mes As Short, ByVal NoPlanilla As Short) As PLProcDeducDataSet.PLPlanillasDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Año,Short)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Mes,Short)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(NoPlanilla,Short)
            Dim dataTable As PLProcDeducDataSet.PLPlanillasDataTable = New PLProcDeducDataSet.PLPlanillasDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PLPlanillasOTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PLPlanillasOT"
            tableMapping.ColumnMappings.Add("Año", "Año")
            tableMapping.ColumnMappings.Add("Mes", "Mes")
            tableMapping.ColumnMappings.Add("NoPlanilla", "NoPlanilla")
            tableMapping.ColumnMappings.Add("CodigoSede", "CodigoSede")
            tableMapping.ColumnMappings.Add("CodigoDepartamento", "CodigoDepartamento")
            tableMapping.ColumnMappings.Add("CodigoSeccion", "CodigoSeccion")
            tableMapping.ColumnMappings.Add("CodigoEmpleado", "CodigoEmpleado")
            tableMapping.ColumnMappings.Add("CodigoDeduccion", "CodigoDeduccion")
            tableMapping.ColumnMappings.Add("Correlativo", "Correlativo")
            tableMapping.ColumnMappings.Add("Fecha", "Fecha")
            tableMapping.ColumnMappings.Add("TipoDeduccion", "TipoDeduccion")
            tableMapping.ColumnMappings.Add("NoDocumento", "NoDocumento")
            tableMapping.ColumnMappings.Add("Valor", "Valor")
            tableMapping.ColumnMappings.Add("Aplicada", "Aplicada")
            tableMapping.ColumnMappings.Add("Referencia", "Referencia")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.RSIContab.My.MySettings.Default.RSIERP_Conexion
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Año, Mes, NoPlanilla, CodigoSede, CodigoDepartamento, CodigoSeccion, C"& _ 
                "odigoEmpleado, CodigoDeduccion, Correlativo, Fecha, TipoDeduccion, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "           NoDocumento, Valor, Aplicada, Referencia"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         PLPlanillasOT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Año = @Año) AND (Mes = @Mes) AND (NoPlanilla = @NoPlanilla) AND (Cod"& _ 
                "igoEmpleado = @CodigoEmpleado)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Año, Mes, NoPlanilla, CodigoEmpleado, C"& _ 
                "odigoDeduccion"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Año", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Año", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mes", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Mes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoPlanilla", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "NoPlanilla", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodigoEmpleado", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoEmpleado", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     Año, Mes, NoPlanilla, CodigoSede, CodigoDepartamento, CodigoSeccion, C"& _ 
                "odigoEmpleado, CodigoDeduccion, Correlativo, Fecha, TipoDeduccion, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "           NoDocumento, Valor, Aplicada, Referencia"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         PLPlanillasOT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Año = @Año) AND (Mes = @Mes) AND (NoPlanilla = @NoPlanilla) AND (Cod"& _ 
                "igoEmpleado = @CodigoEmpleado) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (CodigoDeduccion = @C"& _ 
                "odigoDeduccion)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Año, Mes, NoPlanilla, CodigoEmpleado, CodigoDeduccion"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Año", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Año", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mes", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "Mes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoPlanilla", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 0, 0, "NoPlanilla", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodigoEmpleado", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoEmpleado", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodigoDeduccion", Global.System.Data.SqlDbType.NVarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoDeduccion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PLProcDeducDataSet.PLPlanillasOTDataTable, ByVal Año As Short, ByVal Mes As Short, ByVal NoPlanilla As Short, ByVal CodigoEmpleado As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Año,Short)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Mes,Short)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(NoPlanilla,Short)
            If (CodigoEmpleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CodigoEmpleado")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CodigoEmpleado,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Año As Short, ByVal Mes As Short, ByVal NoPlanilla As Short, ByVal CodigoEmpleado As String) As PLProcDeducDataSet.PLPlanillasOTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Año,Short)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Mes,Short)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(NoPlanilla,Short)
            If (CodigoEmpleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CodigoEmpleado")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CodigoEmpleado,String)
            End If
            Dim dataTable As PLProcDeducDataSet.PLPlanillasOTDataTable = New PLProcDeducDataSet.PLPlanillasOTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByAñoMesNoPlaniEmpDed(ByVal dataTable As PLProcDeducDataSet.PLPlanillasOTDataTable, ByVal Año As Short, ByVal Mes As Short, ByVal NoPlanilla As Short, ByVal CodigoEmpleado As String, ByVal CodigoDeduccion As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Año,Short)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Mes,Short)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(NoPlanilla,Short)
            If (CodigoEmpleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CodigoEmpleado")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CodigoEmpleado,String)
            End If
            If (CodigoDeduccion Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(CodigoDeduccion,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal Año As Short, ByVal Mes As Short, ByVal NoPlanilla As Short, ByVal CodigoEmpleado As String, ByVal CodigoDeduccion As String) As PLProcDeducDataSet.PLPlanillasOTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Año,Short)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Mes,Short)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(NoPlanilla,Short)
            If (CodigoEmpleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CodigoEmpleado")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CodigoEmpleado,String)
            End If
            If (CodigoDeduccion Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(CodigoDeduccion,String)
            End If
            Dim dataTable As PLProcDeducDataSet.PLPlanillasOTDataTable = New PLProcDeducDataSet.PLPlanillasOTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PLDeduccionesDetTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PLDeduccionesDet"
            tableMapping.ColumnMappings.Add("CodigoEmpleado", "CodigoEmpleado")
            tableMapping.ColumnMappings.Add("RAP", "RAP")
            tableMapping.ColumnMappings.Add("Seguro", "Seguro")
            tableMapping.ColumnMappings.Add("Deduccion1", "Deduccion1")
            tableMapping.ColumnMappings.Add("Deduccion2", "Deduccion2")
            tableMapping.ColumnMappings.Add("Deduccion3", "Deduccion3")
            tableMapping.ColumnMappings.Add("Deduccion4", "Deduccion4")
            tableMapping.ColumnMappings.Add("Deduccion5", "Deduccion5")
            tableMapping.ColumnMappings.Add("Deduccion6", "Deduccion6")
            tableMapping.ColumnMappings.Add("Deduccion7", "Deduccion7")
            tableMapping.ColumnMappings.Add("Deduccion8", "Deduccion8")
            tableMapping.ColumnMappings.Add("Deduccion9", "Deduccion9")
            tableMapping.ColumnMappings.Add("Deduccion10", "Deduccion10")
            tableMapping.ColumnMappings.Add("Deduccion11", "Deduccion11")
            tableMapping.ColumnMappings.Add("Deduccion12", "Deduccion12")
            tableMapping.ColumnMappings.Add("Deduccion13", "Deduccion13")
            tableMapping.ColumnMappings.Add("Deduccion14", "Deduccion14")
            tableMapping.ColumnMappings.Add("Deduccion15", "Deduccion15")
            tableMapping.ColumnMappings.Add("Deduccion16", "Deduccion16")
            tableMapping.ColumnMappings.Add("Deduccion17", "Deduccion17")
            tableMapping.ColumnMappings.Add("Deduccion18", "Deduccion18")
            tableMapping.ColumnMappings.Add("Deduccion19", "Deduccion19")
            tableMapping.ColumnMappings.Add("Deduccion20", "Deduccion20")
            tableMapping.ColumnMappings.Add("Deduccion21", "Deduccion21")
            tableMapping.ColumnMappings.Add("Deduccion22", "Deduccion22")
            tableMapping.ColumnMappings.Add("Deduccion23", "Deduccion23")
            tableMapping.ColumnMappings.Add("Deduccion24", "Deduccion24")
            tableMapping.ColumnMappings.Add("Deduccion25", "Deduccion25")
            tableMapping.ColumnMappings.Add("Deduccion26", "Deduccion26")
            tableMapping.ColumnMappings.Add("Deduccion27", "Deduccion27")
            tableMapping.ColumnMappings.Add("Deduccion28", "Deduccion28")
            tableMapping.ColumnMappings.Add("Deduccion29", "Deduccion29")
            tableMapping.ColumnMappings.Add("Deduccion30", "Deduccion30")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PLDeduccionesDet] WHERE (([CodigoEmpleado] = @Original_CodigoE"& _ 
                "mpleado) AND ([RAP] = @Original_RAP) AND ([Seguro] = @Original_Seguro) AND ([Ded"& _ 
                "uccion1] = @Original_Deduccion1) AND ([Deduccion2] = @Original_Deduccion2) AND ("& _ 
                "[Deduccion3] = @Original_Deduccion3) AND ([Deduccion4] = @Original_Deduccion4) A"& _ 
                "ND ([Deduccion5] = @Original_Deduccion5) AND ([Deduccion6] = @Original_Deduccion"& _ 
                "6) AND ([Deduccion7] = @Original_Deduccion7) AND ([Deduccion8] = @Original_Deduc"& _ 
                "cion8) AND ([Deduccion9] = @Original_Deduccion9) AND ([Deduccion10] = @Original_"& _ 
                "Deduccion10) AND ([Deduccion11] = @Original_Deduccion11) AND ([Deduccion12] = @O"& _ 
                "riginal_Deduccion12) AND ([Deduccion13] = @Original_Deduccion13) AND ([Deduccion"& _ 
                "14] = @Original_Deduccion14) AND ([Deduccion15] = @Original_Deduccion15) AND ([D"& _ 
                "educcion16] = @Original_Deduccion16) AND ([Deduccion17] = @Original_Deduccion17)"& _ 
                " AND ([Deduccion18] = @Original_Deduccion18) AND ([Deduccion19] = @Original_Dedu"& _ 
                "ccion19) AND ([Deduccion20] = @Original_Deduccion20) AND ([Deduccion21] = @Origi"& _ 
                "nal_Deduccion21) AND ([Deduccion22] = @Original_Deduccion22) AND ([Deduccion23] "& _ 
                "= @Original_Deduccion23) AND ([Deduccion24] = @Original_Deduccion24) AND ([Deduc"& _ 
                "cion25] = @Original_Deduccion25) AND ([Deduccion26] = @Original_Deduccion26) AND"& _ 
                " ([Deduccion27] = @Original_Deduccion27) AND ([Deduccion28] = @Original_Deduccio"& _ 
                "n28) AND ([Deduccion29] = @Original_Deduccion29) AND ([Deduccion30] = @Original_"& _ 
                "Deduccion30))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CodigoEmpleado", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoEmpleado", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RAP", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "RAP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Seguro", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Seguro", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion3", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion4", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion6", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion7", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion8", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion9", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion14", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion14", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion15", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion15", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion16", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion16", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion17", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion17", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion18", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion18", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion19", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion19", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion20", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion20", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion21", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion21", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion22", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion22", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion23", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion23", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion24", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion24", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion25", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion25", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion26", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion26", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion27", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion27", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion28", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion28", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion29", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion29", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion30", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion30", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PLDeduccionesDet] ([CodigoEmpleado], [RAP], [Seguro], [Deducci"& _ 
                "on1], [Deduccion2], [Deduccion3], [Deduccion4], [Deduccion5], [Deduccion6], [Ded"& _ 
                "uccion7], [Deduccion8], [Deduccion9], [Deduccion10], [Deduccion11], [Deduccion12"& _ 
                "], [Deduccion13], [Deduccion14], [Deduccion15], [Deduccion16], [Deduccion17], [D"& _ 
                "educcion18], [Deduccion19], [Deduccion20], [Deduccion21], [Deduccion22], [Deducc"& _ 
                "ion23], [Deduccion24], [Deduccion25], [Deduccion26], [Deduccion27], [Deduccion28"& _ 
                "], [Deduccion29], [Deduccion30]) VALUES (@CodigoEmpleado, @RAP, @Seguro, @Deducc"& _ 
                "ion1, @Deduccion2, @Deduccion3, @Deduccion4, @Deduccion5, @Deduccion6, @Deduccio"& _ 
                "n7, @Deduccion8, @Deduccion9, @Deduccion10, @Deduccion11, @Deduccion12, @Deducci"& _ 
                "on13, @Deduccion14, @Deduccion15, @Deduccion16, @Deduccion17, @Deduccion18, @Ded"& _ 
                "uccion19, @Deduccion20, @Deduccion21, @Deduccion22, @Deduccion23, @Deduccion24, "& _ 
                "@Deduccion25, @Deduccion26, @Deduccion27, @Deduccion28, @Deduccion29, @Deduccion"& _ 
                "30);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CodigoEmpleado, RAP, Seguro, Deduccion1, Deduccion2, Deduccion3, De"& _ 
                "duccion4, Deduccion5, Deduccion6, Deduccion7, Deduccion8, Deduccion9, Deduccion1"& _ 
                "0, Deduccion11, Deduccion12, Deduccion13, Deduccion14, Deduccion15, Deduccion16,"& _ 
                " Deduccion17, Deduccion18, Deduccion19, Deduccion20, Deduccion21, Deduccion22, D"& _ 
                "educcion23, Deduccion24, Deduccion25, Deduccion26, Deduccion27, Deduccion28, Ded"& _ 
                "uccion29, Deduccion30 FROM PLDeduccionesDet WHERE (CodigoEmpleado = @CodigoEmple"& _ 
                "ado)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodigoEmpleado", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoEmpleado", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RAP", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "RAP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Seguro", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Seguro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion3", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion4", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion6", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion7", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion8", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion9", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion14", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion14", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion15", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion16", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion16", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion17", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion17", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion18", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion18", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion19", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion19", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion20", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion21", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion21", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion22", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion22", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion23", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion23", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion24", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion24", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion25", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion25", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion26", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion26", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion27", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion27", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion28", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion28", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion29", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion29", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion30", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion30", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PLDeduccionesDet] SET [CodigoEmpleado] = @CodigoEmpleado, [RAP] = @"& _ 
                "RAP, [Seguro] = @Seguro, [Deduccion1] = @Deduccion1, [Deduccion2] = @Deduccion2,"& _ 
                " [Deduccion3] = @Deduccion3, [Deduccion4] = @Deduccion4, [Deduccion5] = @Deducci"& _ 
                "on5, [Deduccion6] = @Deduccion6, [Deduccion7] = @Deduccion7, [Deduccion8] = @Ded"& _ 
                "uccion8, [Deduccion9] = @Deduccion9, [Deduccion10] = @Deduccion10, [Deduccion11]"& _ 
                " = @Deduccion11, [Deduccion12] = @Deduccion12, [Deduccion13] = @Deduccion13, [De"& _ 
                "duccion14] = @Deduccion14, [Deduccion15] = @Deduccion15, [Deduccion16] = @Deducc"& _ 
                "ion16, [Deduccion17] = @Deduccion17, [Deduccion18] = @Deduccion18, [Deduccion19]"& _ 
                " = @Deduccion19, [Deduccion20] = @Deduccion20, [Deduccion21] = @Deduccion21, [De"& _ 
                "duccion22] = @Deduccion22, [Deduccion23] = @Deduccion23, [Deduccion24] = @Deducc"& _ 
                "ion24, [Deduccion25] = @Deduccion25, [Deduccion26] = @Deduccion26, [Deduccion27]"& _ 
                " = @Deduccion27, [Deduccion28] = @Deduccion28, [Deduccion29] = @Deduccion29, [De"& _ 
                "duccion30] = @Deduccion30 WHERE (([CodigoEmpleado] = @Original_CodigoEmpleado) A"& _ 
                "ND ([RAP] = @Original_RAP) AND ([Seguro] = @Original_Seguro) AND ([Deduccion1] ="& _ 
                " @Original_Deduccion1) AND ([Deduccion2] = @Original_Deduccion2) AND ([Deduccion"& _ 
                "3] = @Original_Deduccion3) AND ([Deduccion4] = @Original_Deduccion4) AND ([Deduc"& _ 
                "cion5] = @Original_Deduccion5) AND ([Deduccion6] = @Original_Deduccion6) AND ([D"& _ 
                "educcion7] = @Original_Deduccion7) AND ([Deduccion8] = @Original_Deduccion8) AND"& _ 
                " ([Deduccion9] = @Original_Deduccion9) AND ([Deduccion10] = @Original_Deduccion1"& _ 
                "0) AND ([Deduccion11] = @Original_Deduccion11) AND ([Deduccion12] = @Original_De"& _ 
                "duccion12) AND ([Deduccion13] = @Original_Deduccion13) AND ([Deduccion14] = @Ori"& _ 
                "ginal_Deduccion14) AND ([Deduccion15] = @Original_Deduccion15) AND ([Deduccion16"& _ 
                "] = @Original_Deduccion16) AND ([Deduccion17] = @Original_Deduccion17) AND ([Ded"& _ 
                "uccion18] = @Original_Deduccion18) AND ([Deduccion19] = @Original_Deduccion19) A"& _ 
                "ND ([Deduccion20] = @Original_Deduccion20) AND ([Deduccion21] = @Original_Deducc"& _ 
                "ion21) AND ([Deduccion22] = @Original_Deduccion22) AND ([Deduccion23] = @Origina"& _ 
                "l_Deduccion23) AND ([Deduccion24] = @Original_Deduccion24) AND ([Deduccion25] = "& _ 
                "@Original_Deduccion25) AND ([Deduccion26] = @Original_Deduccion26) AND ([Deducci"& _ 
                "on27] = @Original_Deduccion27) AND ([Deduccion28] = @Original_Deduccion28) AND ("& _ 
                "[Deduccion29] = @Original_Deduccion29) AND ([Deduccion30] = @Original_Deduccion3"& _ 
                "0));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CodigoEmpleado, RAP, Seguro, Deduccion1, Deduccion2, Deduccion3, De"& _ 
                "duccion4, Deduccion5, Deduccion6, Deduccion7, Deduccion8, Deduccion9, Deduccion1"& _ 
                "0, Deduccion11, Deduccion12, Deduccion13, Deduccion14, Deduccion15, Deduccion16,"& _ 
                " Deduccion17, Deduccion18, Deduccion19, Deduccion20, Deduccion21, Deduccion22, D"& _ 
                "educcion23, Deduccion24, Deduccion25, Deduccion26, Deduccion27, Deduccion28, Ded"& _ 
                "uccion29, Deduccion30 FROM PLDeduccionesDet WHERE (CodigoEmpleado = @CodigoEmple"& _ 
                "ado)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodigoEmpleado", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoEmpleado", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RAP", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "RAP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Seguro", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Seguro", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion3", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion4", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion6", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion7", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion8", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion9", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion14", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion14", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion15", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion16", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion16", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion17", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion17", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion18", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion18", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion19", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion19", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion20", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion20", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion21", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion21", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion22", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion22", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion23", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion23", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion24", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion24", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion25", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion25", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion26", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion26", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion27", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion27", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion28", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion28", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion29", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion29", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Deduccion30", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion30", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CodigoEmpleado", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoEmpleado", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RAP", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "RAP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Seguro", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Seguro", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion3", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion4", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion6", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion7", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion8", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion9", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion11", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion12", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion13", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion14", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion14", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion15", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion15", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion16", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion16", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion17", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion17", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion18", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion18", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion19", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion19", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion20", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion20", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion21", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion21", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion22", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion22", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion23", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion23", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion24", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion24", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion25", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion25", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion26", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion26", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion27", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion27", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion28", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion28", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion29", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion29", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Deduccion30", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 2, "Deduccion30", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.RSIContab.My.MySettings.Default.RSIERP_Conexion
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CodigoEmpleado, RAP, Seguro, Deduccion1, Deduccion2, Deduccion3, Deduccion"& _ 
                "4, Deduccion5, Deduccion6, Deduccion7, Deduccion8, Deduccion9, Deduccion10, Dedu"& _ 
                "ccion11, Deduccion12, Deduccion13, Deduccion14, Deduccion15, Deduccion16, Deducc"& _ 
                "ion17, Deduccion18, Deduccion19, Deduccion20, Deduccion21, Deduccion22, Deduccio"& _ 
                "n23, Deduccion24, Deduccion25, Deduccion26, Deduccion27, Deduccion28, Deduccion2"& _ 
                "9, Deduccion30 FROM dbo.PLDeduccionesDet"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PLProcDeducDataSet.PLDeduccionesDetDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PLProcDeducDataSet.PLDeduccionesDetDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PLProcDeducDataSet.PLDeduccionesDetDataTable = New PLProcDeducDataSet.PLDeduccionesDetDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PLProcDeducDataSet.PLDeduccionesDetDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PLProcDeducDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "PLDeduccionesDet")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CodigoEmpleado As String,  _
                    ByVal Original_RAP As Decimal,  _
                    ByVal Original_Seguro As Decimal,  _
                    ByVal Original_Deduccion1 As Decimal,  _
                    ByVal Original_Deduccion2 As Decimal,  _
                    ByVal Original_Deduccion3 As Decimal,  _
                    ByVal Original_Deduccion4 As Decimal,  _
                    ByVal Original_Deduccion5 As Decimal,  _
                    ByVal Original_Deduccion6 As Decimal,  _
                    ByVal Original_Deduccion7 As Decimal,  _
                    ByVal Original_Deduccion8 As Decimal,  _
                    ByVal Original_Deduccion9 As Decimal,  _
                    ByVal Original_Deduccion10 As Decimal,  _
                    ByVal Original_Deduccion11 As Decimal,  _
                    ByVal Original_Deduccion12 As Decimal,  _
                    ByVal Original_Deduccion13 As Decimal,  _
                    ByVal Original_Deduccion14 As Decimal,  _
                    ByVal Original_Deduccion15 As Decimal,  _
                    ByVal Original_Deduccion16 As Decimal,  _
                    ByVal Original_Deduccion17 As Decimal,  _
                    ByVal Original_Deduccion18 As Decimal,  _
                    ByVal Original_Deduccion19 As Decimal,  _
                    ByVal Original_Deduccion20 As Decimal,  _
                    ByVal Original_Deduccion21 As Decimal,  _
                    ByVal Original_Deduccion22 As Decimal,  _
                    ByVal Original_Deduccion23 As Decimal,  _
                    ByVal Original_Deduccion24 As Decimal,  _
                    ByVal Original_Deduccion25 As Decimal,  _
                    ByVal Original_Deduccion26 As Decimal,  _
                    ByVal Original_Deduccion27 As Decimal,  _
                    ByVal Original_Deduccion28 As Decimal,  _
                    ByVal Original_Deduccion29 As Decimal,  _
                    ByVal Original_Deduccion30 As Decimal) As Integer
            If (Original_CodigoEmpleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CodigoEmpleado")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CodigoEmpleado,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_RAP,Decimal)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Seguro,Decimal)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Deduccion1,Decimal)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Deduccion2,Decimal)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Deduccion3,Decimal)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Deduccion4,Decimal)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Deduccion5,Decimal)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Deduccion6,Decimal)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Deduccion7,Decimal)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Deduccion8,Decimal)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_Deduccion9,Decimal)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Deduccion10,Decimal)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_Deduccion11,Decimal)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Deduccion12,Decimal)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_Deduccion13,Decimal)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Deduccion14,Decimal)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_Deduccion15,Decimal)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_Deduccion16,Decimal)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_Deduccion17,Decimal)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Deduccion18,Decimal)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_Deduccion19,Decimal)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_Deduccion20,Decimal)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_Deduccion21,Decimal)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_Deduccion22,Decimal)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_Deduccion23,Decimal)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_Deduccion24,Decimal)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_Deduccion25,Decimal)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_Deduccion26,Decimal)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_Deduccion27,Decimal)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_Deduccion28,Decimal)
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_Deduccion29,Decimal)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_Deduccion30,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CodigoEmpleado As String,  _
                    ByVal RAP As Decimal,  _
                    ByVal Seguro As Decimal,  _
                    ByVal Deduccion1 As Decimal,  _
                    ByVal Deduccion2 As Decimal,  _
                    ByVal Deduccion3 As Decimal,  _
                    ByVal Deduccion4 As Decimal,  _
                    ByVal Deduccion5 As Decimal,  _
                    ByVal Deduccion6 As Decimal,  _
                    ByVal Deduccion7 As Decimal,  _
                    ByVal Deduccion8 As Decimal,  _
                    ByVal Deduccion9 As Decimal,  _
                    ByVal Deduccion10 As Decimal,  _
                    ByVal Deduccion11 As Decimal,  _
                    ByVal Deduccion12 As Decimal,  _
                    ByVal Deduccion13 As Decimal,  _
                    ByVal Deduccion14 As Decimal,  _
                    ByVal Deduccion15 As Decimal,  _
                    ByVal Deduccion16 As Decimal,  _
                    ByVal Deduccion17 As Decimal,  _
                    ByVal Deduccion18 As Decimal,  _
                    ByVal Deduccion19 As Decimal,  _
                    ByVal Deduccion20 As Decimal,  _
                    ByVal Deduccion21 As Decimal,  _
                    ByVal Deduccion22 As Decimal,  _
                    ByVal Deduccion23 As Decimal,  _
                    ByVal Deduccion24 As Decimal,  _
                    ByVal Deduccion25 As Decimal,  _
                    ByVal Deduccion26 As Decimal,  _
                    ByVal Deduccion27 As Decimal,  _
                    ByVal Deduccion28 As Decimal,  _
                    ByVal Deduccion29 As Decimal,  _
                    ByVal Deduccion30 As Decimal) As Integer
            If (CodigoEmpleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CodigoEmpleado")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CodigoEmpleado,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(RAP,Decimal)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Seguro,Decimal)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Deduccion1,Decimal)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Deduccion2,Decimal)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(Deduccion3,Decimal)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Deduccion4,Decimal)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(Deduccion5,Decimal)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(Deduccion6,Decimal)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(Deduccion7,Decimal)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(Deduccion8,Decimal)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(Deduccion9,Decimal)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(Deduccion10,Decimal)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(Deduccion11,Decimal)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(Deduccion12,Decimal)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(Deduccion13,Decimal)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(Deduccion14,Decimal)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(Deduccion15,Decimal)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(Deduccion16,Decimal)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(Deduccion17,Decimal)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(Deduccion18,Decimal)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(Deduccion19,Decimal)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(Deduccion20,Decimal)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(Deduccion21,Decimal)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(Deduccion22,Decimal)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(Deduccion23,Decimal)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(Deduccion24,Decimal)
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(Deduccion25,Decimal)
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(Deduccion26,Decimal)
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(Deduccion27,Decimal)
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(Deduccion28,Decimal)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(Deduccion29,Decimal)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(Deduccion30,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CodigoEmpleado As String,  _
                    ByVal RAP As Decimal,  _
                    ByVal Seguro As Decimal,  _
                    ByVal Deduccion1 As Decimal,  _
                    ByVal Deduccion2 As Decimal,  _
                    ByVal Deduccion3 As Decimal,  _
                    ByVal Deduccion4 As Decimal,  _
                    ByVal Deduccion5 As Decimal,  _
                    ByVal Deduccion6 As Decimal,  _
                    ByVal Deduccion7 As Decimal,  _
                    ByVal Deduccion8 As Decimal,  _
                    ByVal Deduccion9 As Decimal,  _
                    ByVal Deduccion10 As Decimal,  _
                    ByVal Deduccion11 As Decimal,  _
                    ByVal Deduccion12 As Decimal,  _
                    ByVal Deduccion13 As Decimal,  _
                    ByVal Deduccion14 As Decimal,  _
                    ByVal Deduccion15 As Decimal,  _
                    ByVal Deduccion16 As Decimal,  _
                    ByVal Deduccion17 As Decimal,  _
                    ByVal Deduccion18 As Decimal,  _
                    ByVal Deduccion19 As Decimal,  _
                    ByVal Deduccion20 As Decimal,  _
                    ByVal Deduccion21 As Decimal,  _
                    ByVal Deduccion22 As Decimal,  _
                    ByVal Deduccion23 As Decimal,  _
                    ByVal Deduccion24 As Decimal,  _
                    ByVal Deduccion25 As Decimal,  _
                    ByVal Deduccion26 As Decimal,  _
                    ByVal Deduccion27 As Decimal,  _
                    ByVal Deduccion28 As Decimal,  _
                    ByVal Deduccion29 As Decimal,  _
                    ByVal Deduccion30 As Decimal,  _
                    ByVal Original_CodigoEmpleado As String,  _
                    ByVal Original_RAP As Decimal,  _
                    ByVal Original_Seguro As Decimal,  _
                    ByVal Original_Deduccion1 As Decimal,  _
                    ByVal Original_Deduccion2 As Decimal,  _
                    ByVal Original_Deduccion3 As Decimal,  _
                    ByVal Original_Deduccion4 As Decimal,  _
                    ByVal Original_Deduccion5 As Decimal,  _
                    ByVal Original_Deduccion6 As Decimal,  _
                    ByVal Original_Deduccion7 As Decimal,  _
                    ByVal Original_Deduccion8 As Decimal,  _
                    ByVal Original_Deduccion9 As Decimal,  _
                    ByVal Original_Deduccion10 As Decimal,  _
                    ByVal Original_Deduccion11 As Decimal,  _
                    ByVal Original_Deduccion12 As Decimal,  _
                    ByVal Original_Deduccion13 As Decimal,  _
                    ByVal Original_Deduccion14 As Decimal,  _
                    ByVal Original_Deduccion15 As Decimal,  _
                    ByVal Original_Deduccion16 As Decimal,  _
                    ByVal Original_Deduccion17 As Decimal,  _
                    ByVal Original_Deduccion18 As Decimal,  _
                    ByVal Original_Deduccion19 As Decimal,  _
                    ByVal Original_Deduccion20 As Decimal,  _
                    ByVal Original_Deduccion21 As Decimal,  _
                    ByVal Original_Deduccion22 As Decimal,  _
                    ByVal Original_Deduccion23 As Decimal,  _
                    ByVal Original_Deduccion24 As Decimal,  _
                    ByVal Original_Deduccion25 As Decimal,  _
                    ByVal Original_Deduccion26 As Decimal,  _
                    ByVal Original_Deduccion27 As Decimal,  _
                    ByVal Original_Deduccion28 As Decimal,  _
                    ByVal Original_Deduccion29 As Decimal,  _
                    ByVal Original_Deduccion30 As Decimal) As Integer
            If (CodigoEmpleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CodigoEmpleado")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CodigoEmpleado,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(RAP,Decimal)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Seguro,Decimal)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Deduccion1,Decimal)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Deduccion2,Decimal)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Deduccion3,Decimal)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Deduccion4,Decimal)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Deduccion5,Decimal)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Deduccion6,Decimal)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Deduccion7,Decimal)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Deduccion8,Decimal)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Deduccion9,Decimal)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Deduccion10,Decimal)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Deduccion11,Decimal)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Deduccion12,Decimal)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Deduccion13,Decimal)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Deduccion14,Decimal)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Deduccion15,Decimal)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Deduccion16,Decimal)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Deduccion17,Decimal)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Deduccion18,Decimal)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Deduccion19,Decimal)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Deduccion20,Decimal)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Deduccion21,Decimal)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Deduccion22,Decimal)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Deduccion23,Decimal)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Deduccion24,Decimal)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Deduccion25,Decimal)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Deduccion26,Decimal)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Deduccion27,Decimal)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Deduccion28,Decimal)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Deduccion29,Decimal)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Deduccion30,Decimal)
            If (Original_CodigoEmpleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CodigoEmpleado")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_CodigoEmpleado,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_RAP,Decimal)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_Seguro,Decimal)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_Deduccion1,Decimal)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_Deduccion2,Decimal)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_Deduccion3,Decimal)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_Deduccion4,Decimal)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_Deduccion5,Decimal)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_Deduccion6,Decimal)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Deduccion7,Decimal)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_Deduccion8,Decimal)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Deduccion9,Decimal)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_Deduccion10,Decimal)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_Deduccion11,Decimal)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_Deduccion12,Decimal)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_Deduccion13,Decimal)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_Deduccion14,Decimal)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_Deduccion15,Decimal)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_Deduccion16,Decimal)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_Deduccion17,Decimal)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_Deduccion18,Decimal)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_Deduccion19,Decimal)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_Deduccion20,Decimal)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_Deduccion21,Decimal)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_Deduccion22,Decimal)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_Deduccion23,Decimal)
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_Deduccion24,Decimal)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_Deduccion25,Decimal)
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_Deduccion26,Decimal)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_Deduccion27,Decimal)
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_Deduccion28,Decimal)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_Deduccion29,Decimal)
            Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_Deduccion30,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RAP As Decimal,  _
                    ByVal Seguro As Decimal,  _
                    ByVal Deduccion1 As Decimal,  _
                    ByVal Deduccion2 As Decimal,  _
                    ByVal Deduccion3 As Decimal,  _
                    ByVal Deduccion4 As Decimal,  _
                    ByVal Deduccion5 As Decimal,  _
                    ByVal Deduccion6 As Decimal,  _
                    ByVal Deduccion7 As Decimal,  _
                    ByVal Deduccion8 As Decimal,  _
                    ByVal Deduccion9 As Decimal,  _
                    ByVal Deduccion10 As Decimal,  _
                    ByVal Deduccion11 As Decimal,  _
                    ByVal Deduccion12 As Decimal,  _
                    ByVal Deduccion13 As Decimal,  _
                    ByVal Deduccion14 As Decimal,  _
                    ByVal Deduccion15 As Decimal,  _
                    ByVal Deduccion16 As Decimal,  _
                    ByVal Deduccion17 As Decimal,  _
                    ByVal Deduccion18 As Decimal,  _
                    ByVal Deduccion19 As Decimal,  _
                    ByVal Deduccion20 As Decimal,  _
                    ByVal Deduccion21 As Decimal,  _
                    ByVal Deduccion22 As Decimal,  _
                    ByVal Deduccion23 As Decimal,  _
                    ByVal Deduccion24 As Decimal,  _
                    ByVal Deduccion25 As Decimal,  _
                    ByVal Deduccion26 As Decimal,  _
                    ByVal Deduccion27 As Decimal,  _
                    ByVal Deduccion28 As Decimal,  _
                    ByVal Deduccion29 As Decimal,  _
                    ByVal Deduccion30 As Decimal,  _
                    ByVal Original_CodigoEmpleado As String,  _
                    ByVal Original_RAP As Decimal,  _
                    ByVal Original_Seguro As Decimal,  _
                    ByVal Original_Deduccion1 As Decimal,  _
                    ByVal Original_Deduccion2 As Decimal,  _
                    ByVal Original_Deduccion3 As Decimal,  _
                    ByVal Original_Deduccion4 As Decimal,  _
                    ByVal Original_Deduccion5 As Decimal,  _
                    ByVal Original_Deduccion6 As Decimal,  _
                    ByVal Original_Deduccion7 As Decimal,  _
                    ByVal Original_Deduccion8 As Decimal,  _
                    ByVal Original_Deduccion9 As Decimal,  _
                    ByVal Original_Deduccion10 As Decimal,  _
                    ByVal Original_Deduccion11 As Decimal,  _
                    ByVal Original_Deduccion12 As Decimal,  _
                    ByVal Original_Deduccion13 As Decimal,  _
                    ByVal Original_Deduccion14 As Decimal,  _
                    ByVal Original_Deduccion15 As Decimal,  _
                    ByVal Original_Deduccion16 As Decimal,  _
                    ByVal Original_Deduccion17 As Decimal,  _
                    ByVal Original_Deduccion18 As Decimal,  _
                    ByVal Original_Deduccion19 As Decimal,  _
                    ByVal Original_Deduccion20 As Decimal,  _
                    ByVal Original_Deduccion21 As Decimal,  _
                    ByVal Original_Deduccion22 As Decimal,  _
                    ByVal Original_Deduccion23 As Decimal,  _
                    ByVal Original_Deduccion24 As Decimal,  _
                    ByVal Original_Deduccion25 As Decimal,  _
                    ByVal Original_Deduccion26 As Decimal,  _
                    ByVal Original_Deduccion27 As Decimal,  _
                    ByVal Original_Deduccion28 As Decimal,  _
                    ByVal Original_Deduccion29 As Decimal,  _
                    ByVal Original_Deduccion30 As Decimal) As Integer
            Return Me.Update(Original_CodigoEmpleado, RAP, Seguro, Deduccion1, Deduccion2, Deduccion3, Deduccion4, Deduccion5, Deduccion6, Deduccion7, Deduccion8, Deduccion9, Deduccion10, Deduccion11, Deduccion12, Deduccion13, Deduccion14, Deduccion15, Deduccion16, Deduccion17, Deduccion18, Deduccion19, Deduccion20, Deduccion21, Deduccion22, Deduccion23, Deduccion24, Deduccion25, Deduccion26, Deduccion27, Deduccion28, Deduccion29, Deduccion30, Original_CodigoEmpleado, Original_RAP, Original_Seguro, Original_Deduccion1, Original_Deduccion2, Original_Deduccion3, Original_Deduccion4, Original_Deduccion5, Original_Deduccion6, Original_Deduccion7, Original_Deduccion8, Original_Deduccion9, Original_Deduccion10, Original_Deduccion11, Original_Deduccion12, Original_Deduccion13, Original_Deduccion14, Original_Deduccion15, Original_Deduccion16, Original_Deduccion17, Original_Deduccion18, Original_Deduccion19, Original_Deduccion20, Original_Deduccion21, Original_Deduccion22, Original_Deduccion23, Original_Deduccion24, Original_Deduccion25, Original_Deduccion26, Original_Deduccion27, Original_Deduccion28, Original_Deduccion29, Original_Deduccion30)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PLDefinicionDeduccionesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PLDefinicionDeducciones"
            tableMapping.ColumnMappings.Add("CodigoDeduccion", "CodigoDeduccion")
            tableMapping.ColumnMappings.Add("DescripcionDeduccion", "DescripcionDeduccion")
            tableMapping.ColumnMappings.Add("DeduccionPermanente", "DeduccionPermanente")
            tableMapping.ColumnMappings.Add("RepTituloColumna", "RepTituloColumna")
            tableMapping.ColumnMappings.Add("RepNoColumna", "RepNoColumna")
            tableMapping.ColumnMappings.Add("RepTotEnOtrasDeducciones", "RepTotEnOtrasDeducciones")
            tableMapping.ColumnMappings.Add("ReciTituloColumna", "ReciTituloColumna")
            tableMapping.ColumnMappings.Add("ReciNoPosicion", "ReciNoPosicion")
            tableMapping.ColumnMappings.Add("ReciTotEnOtrasDeducciones", "ReciTotEnOtrasDeducciones")
            tableMapping.ColumnMappings.Add("AplicarEnPlanillaVacaciones", "AplicarEnPlanillaVacaciones")
            tableMapping.ColumnMappings.Add("AplicarEnPlanilla13VO", "AplicarEnPlanilla13VO")
            tableMapping.ColumnMappings.Add("AplicarEnPlanilla14VO", "AplicarEnPlanilla14VO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.RSIContab.My.MySettings.Default.RSIERP_Conexion
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CodigoDeduccion, DescripcionDeduccion, DeduccionPermanente, RepTituloC"& _ 
                "olumna, RepNoColumna, RepTotEnOtrasDeducciones, ReciTituloColumna,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "           ReciNoPosicion, ReciTotEnOtrasDeducciones, AplicarEnPlanillaVacacione"& _ 
                "s, AplicarEnPlanilla13VO, AplicarEnPlanilla14VO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         PLDefinicionDeducc"& _ 
                "iones"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CodigoDeduccion"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PLProcDeducDataSet.PLDefinicionDeduccionesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PLProcDeducDataSet.PLDefinicionDeduccionesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PLProcDeducDataSet.PLDefinicionDeduccionesDataTable = New PLProcDeducDataSet.PLDefinicionDeduccionesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _pLDeduccionesDetTableAdapter As PLDeduccionesDetTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PLDeduccionesDetTableAdapter() As PLDeduccionesDetTableAdapter
            Get
                Return Me._pLDeduccionesDetTableAdapter
            End Get
            Set
                Me._pLDeduccionesDetTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._pLDeduccionesDetTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pLDeduccionesDetTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pLDeduccionesDetTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._pLDeduccionesDetTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As PLProcDeducDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pLDeduccionesDetTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PLDeduccionesDet.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pLDeduccionesDetTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As PLProcDeducDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pLDeduccionesDetTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PLDeduccionesDet.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pLDeduccionesDetTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As PLProcDeducDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pLDeduccionesDetTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PLDeduccionesDet.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pLDeduccionesDetTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As PLProcDeducDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._pLDeduccionesDetTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pLDeduccionesDetTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._pLDeduccionesDetTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pLDeduccionesDetTableAdapter, Me._pLDeduccionesDetTableAdapter.Connection)
                    Me._pLDeduccionesDetTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._pLDeduccionesDetTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._pLDeduccionesDetTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pLDeduccionesDetTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pLDeduccionesDetTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._pLDeduccionesDetTableAdapter) Is Nothing) Then
                    Me._pLDeduccionesDetTableAdapter.Connection = CType(revertConnections(Me._pLDeduccionesDetTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._pLDeduccionesDetTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
