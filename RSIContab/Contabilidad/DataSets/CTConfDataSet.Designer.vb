'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.18444
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("CTConfDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class CTConfDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableCTConf As CTConfDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CTConf")) Is Nothing) Then
                MyBase.Tables.Add(New CTConfDataTable(ds.Tables("CTConf")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property CTConf() As CTConfDataTable
        Get
            Return Me.tableCTConf
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As CTConfDataSet = CType(MyBase.Clone, CTConfDataSet)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CTConf")) Is Nothing) Then
                MyBase.Tables.Add(New CTConfDataTable(ds.Tables("CTConf")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCTConf = CType(MyBase.Tables("CTConf"), CTConfDataTable)
        If (initTable = True) Then
            If (Not (Me.tableCTConf) Is Nothing) Then
                Me.tableCTConf.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "CTConfDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/CTConfDataSet.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCTConf = New CTConfDataTable()
        MyBase.Tables.Add(Me.tableCTConf)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeCTConf() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As CTConfDataSet = New CTConfDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub CTConfRowChangeEventHandler(ByVal sender As Object, ByVal e As CTConfRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class CTConfDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable

        Private columnId As Global.System.Data.DataColumn

        Private columnAñoEnProceso As Global.System.Data.DataColumn

        Private columnMesEnProceso As Global.System.Data.DataColumn

        Private columnMesDeCierre As Global.System.Data.DataColumn

        Private columnFechaProceso As Global.System.Data.DataColumn

        Private columnAñoComparacion1 As Global.System.Data.DataColumn

        Private columnAñoComparacion2 As Global.System.Data.DataColumn

        Private columnIndiceActivos As Global.System.Data.DataColumn

        Private columnIndicePasivos As Global.System.Data.DataColumn

        Private columnIndiceCapital As Global.System.Data.DataColumn

        Private columnIndiceIngresos As Global.System.Data.DataColumn

        Private columnIndiceCostos As Global.System.Data.DataColumn

        Private columnIndiceGastos As Global.System.Data.DataColumn

        Private columnIndiceOrden As Global.System.Data.DataColumn

        Private columnNiveles As Global.System.Data.DataColumn

        Private columnDigitosNivel1 As Global.System.Data.DataColumn

        Private columnDigitosNivel2 As Global.System.Data.DataColumn

        Private columnDigitosNivel3 As Global.System.Data.DataColumn

        Private columnDigitosNivel4 As Global.System.Data.DataColumn

        Private columnDigitosNivel5 As Global.System.Data.DataColumn

        Private columnDigitosNivel6 As Global.System.Data.DataColumn

        Private columnDigitosNivel7 As Global.System.Data.DataColumn

        Private columnDigitosNivel8 As Global.System.Data.DataColumn

        Private columnDigitosNivel9 As Global.System.Data.DataColumn

        Private columnDigitosNivel10 As Global.System.Data.DataColumn

        Private columnFormatoLibre As Global.System.Data.DataColumn

        Private columnNivelActivoRepBalGen As Global.System.Data.DataColumn

        Private columnNivelPasivoRepBalGen As Global.System.Data.DataColumn

        Private columnNivelCapitalRepBalGen As Global.System.Data.DataColumn

        Private columnNivelIngresosRepEstResul As Global.System.Data.DataColumn

        Private columnNivelCostosRepEstResul As Global.System.Data.DataColumn

        Private columnNivelGastosRepEstResul As Global.System.Data.DataColumn

        Private columnNumeracionAutoPartidas As Global.System.Data.DataColumn

        Private columnUltimaPartida As Global.System.Data.DataColumn

        Private columnPermisoDescuadre As Global.System.Data.DataColumn

        Private columnEjecutivo1 As Global.System.Data.DataColumn

        Private columnCargo1 As Global.System.Data.DataColumn

        Private columnEjecutivo2 As Global.System.Data.DataColumn

        Private columnCargo2 As Global.System.Data.DataColumn

        Private columnEjecutivo3 As Global.System.Data.DataColumn

        Private columnCargo3 As Global.System.Data.DataColumn

        Private columnMostrarEjecutivos As Global.System.Data.DataColumn

        Private columnRellenoCerosNiveles As Global.System.Data.DataColumn

        Private columnCatalogoCreado As Global.System.Data.DataColumn

        Private columnTipoPresupuesto As Global.System.Data.DataColumn

        Private columnPresupuestoPorGenero As Global.System.Data.DataColumn

        Private columnTituloMoneda As Global.System.Data.DataColumn

        Private columnTituloCambioMoneda As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "CTConf"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AñoEnProcesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAñoEnProceso
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MesEnProcesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMesEnProceso
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MesDeCierreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMesDeCierre
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaProcesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaProceso
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AñoComparacion1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAñoComparacion1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AñoComparacion2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAñoComparacion2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndiceActivosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndiceActivos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndicePasivosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndicePasivos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndiceCapitalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndiceCapital
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndiceIngresosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndiceIngresos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndiceCostosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndiceCostos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndiceGastosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndiceGastos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndiceOrdenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndiceOrden
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NivelesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNiveles
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DigitosNivel1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDigitosNivel1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DigitosNivel2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDigitosNivel2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DigitosNivel3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDigitosNivel3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DigitosNivel4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDigitosNivel4
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DigitosNivel5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDigitosNivel5
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DigitosNivel6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDigitosNivel6
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DigitosNivel7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDigitosNivel7
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DigitosNivel8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDigitosNivel8
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DigitosNivel9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDigitosNivel9
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DigitosNivel10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDigitosNivel10
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FormatoLibreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormatoLibre
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NivelActivoRepBalGenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNivelActivoRepBalGen
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NivelPasivoRepBalGenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNivelPasivoRepBalGen
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NivelCapitalRepBalGenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNivelCapitalRepBalGen
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NivelIngresosRepEstResulColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNivelIngresosRepEstResul
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NivelCostosRepEstResulColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNivelCostosRepEstResul
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NivelGastosRepEstResulColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNivelGastosRepEstResul
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumeracionAutoPartidasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeracionAutoPartidas
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UltimaPartidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUltimaPartida
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PermisoDescuadreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPermisoDescuadre
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Ejecutivo1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEjecutivo1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Cargo1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCargo1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Ejecutivo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEjecutivo2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Cargo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCargo2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Ejecutivo3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEjecutivo3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Cargo3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCargo3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MostrarEjecutivosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMostrarEjecutivos
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RellenoCerosNivelesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRellenoCerosNiveles
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CatalogoCreadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCatalogoCreado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoPresupuestoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoPresupuesto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PresupuestoPorGeneroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresupuestoPorGenero
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TituloMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTituloMoneda
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TituloCambioMonedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTituloCambioMoneda
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As CTConfRow
            Get
                Return CType(Me.Rows(index), CTConfRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CTConfRowChanging As CTConfRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CTConfRowChanged As CTConfRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CTConfRowDeleting As CTConfRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event CTConfRowDeleted As CTConfRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddCTConfRow(ByVal row As CTConfRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddCTConfRow( _
                    ByVal AñoEnProceso As Short, _
                    ByVal MesEnProceso As Short, _
                    ByVal MesDeCierre As Short, _
                    ByVal FechaProceso As Date, _
                    ByVal AñoComparacion1 As Short, _
                    ByVal AñoComparacion2 As Short, _
                    ByVal IndiceActivos As Short, _
                    ByVal IndicePasivos As Short, _
                    ByVal IndiceCapital As Short, _
                    ByVal IndiceIngresos As Short, _
                    ByVal IndiceCostos As Short, _
                    ByVal IndiceGastos As Short, _
                    ByVal IndiceOrden As Short, _
                    ByVal Niveles As Short, _
                    ByVal DigitosNivel1 As Short, _
                    ByVal DigitosNivel2 As Short, _
                    ByVal DigitosNivel3 As Short, _
                    ByVal DigitosNivel4 As Short, _
                    ByVal DigitosNivel5 As Short, _
                    ByVal DigitosNivel6 As Short, _
                    ByVal DigitosNivel7 As Short, _
                    ByVal DigitosNivel8 As Short, _
                    ByVal DigitosNivel9 As Short, _
                    ByVal DigitosNivel10 As Short, _
                    ByVal FormatoLibre As Boolean, _
                    ByVal NivelActivoRepBalGen As Short, _
                    ByVal NivelPasivoRepBalGen As Short, _
                    ByVal NivelCapitalRepBalGen As Short, _
                    ByVal NivelIngresosRepEstResul As Short, _
                    ByVal NivelCostosRepEstResul As Short, _
                    ByVal NivelGastosRepEstResul As Short, _
                    ByVal NumeracionAutoPartidas As Boolean, _
                    ByVal UltimaPartida As Integer, _
                    ByVal PermisoDescuadre As Boolean, _
                    ByVal Ejecutivo1 As String, _
                    ByVal Cargo1 As String, _
                    ByVal Ejecutivo2 As String, _
                    ByVal Cargo2 As String, _
                    ByVal Ejecutivo3 As String, _
                    ByVal Cargo3 As String, _
                    ByVal MostrarEjecutivos As Boolean, _
                    ByVal RellenoCerosNiveles As Short, _
                    ByVal CatalogoCreado As Boolean, _
                    ByVal TipoPresupuesto As String, _
                    ByVal PresupuestoPorGenero As Boolean, _
                    ByVal TituloMoneda As String, _
                    ByVal TituloCambioMoneda As String) As CTConfRow
            Dim rowCTConfRow As CTConfRow = CType(Me.NewRow, CTConfRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, AñoEnProceso, MesEnProceso, MesDeCierre, FechaProceso, AñoComparacion1, AñoComparacion2, IndiceActivos, IndicePasivos, IndiceCapital, IndiceIngresos, IndiceCostos, IndiceGastos, IndiceOrden, Niveles, DigitosNivel1, DigitosNivel2, DigitosNivel3, DigitosNivel4, DigitosNivel5, DigitosNivel6, DigitosNivel7, DigitosNivel8, DigitosNivel9, DigitosNivel10, FormatoLibre, NivelActivoRepBalGen, NivelPasivoRepBalGen, NivelCapitalRepBalGen, NivelIngresosRepEstResul, NivelCostosRepEstResul, NivelGastosRepEstResul, NumeracionAutoPartidas, UltimaPartida, PermisoDescuadre, Ejecutivo1, Cargo1, Ejecutivo2, Cargo2, Ejecutivo3, Cargo3, MostrarEjecutivos, RellenoCerosNiveles, CatalogoCreado, TipoPresupuesto, PresupuestoPorGenero, TituloMoneda, TituloCambioMoneda}
            rowCTConfRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCTConfRow)
            Return rowCTConfRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindById(ByVal Id As Integer) As CTConfRow
            Return CType(Me.Rows.Find(New Object() {Id}), CTConfRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CTConfDataTable = CType(MyBase.Clone, CTConfDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CTConfDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnAñoEnProceso = MyBase.Columns("AñoEnProceso")
            Me.columnMesEnProceso = MyBase.Columns("MesEnProceso")
            Me.columnMesDeCierre = MyBase.Columns("MesDeCierre")
            Me.columnFechaProceso = MyBase.Columns("FechaProceso")
            Me.columnAñoComparacion1 = MyBase.Columns("AñoComparacion1")
            Me.columnAñoComparacion2 = MyBase.Columns("AñoComparacion2")
            Me.columnIndiceActivos = MyBase.Columns("IndiceActivos")
            Me.columnIndicePasivos = MyBase.Columns("IndicePasivos")
            Me.columnIndiceCapital = MyBase.Columns("IndiceCapital")
            Me.columnIndiceIngresos = MyBase.Columns("IndiceIngresos")
            Me.columnIndiceCostos = MyBase.Columns("IndiceCostos")
            Me.columnIndiceGastos = MyBase.Columns("IndiceGastos")
            Me.columnIndiceOrden = MyBase.Columns("IndiceOrden")
            Me.columnNiveles = MyBase.Columns("Niveles")
            Me.columnDigitosNivel1 = MyBase.Columns("DigitosNivel1")
            Me.columnDigitosNivel2 = MyBase.Columns("DigitosNivel2")
            Me.columnDigitosNivel3 = MyBase.Columns("DigitosNivel3")
            Me.columnDigitosNivel4 = MyBase.Columns("DigitosNivel4")
            Me.columnDigitosNivel5 = MyBase.Columns("DigitosNivel5")
            Me.columnDigitosNivel6 = MyBase.Columns("DigitosNivel6")
            Me.columnDigitosNivel7 = MyBase.Columns("DigitosNivel7")
            Me.columnDigitosNivel8 = MyBase.Columns("DigitosNivel8")
            Me.columnDigitosNivel9 = MyBase.Columns("DigitosNivel9")
            Me.columnDigitosNivel10 = MyBase.Columns("DigitosNivel10")
            Me.columnFormatoLibre = MyBase.Columns("FormatoLibre")
            Me.columnNivelActivoRepBalGen = MyBase.Columns("NivelActivoRepBalGen")
            Me.columnNivelPasivoRepBalGen = MyBase.Columns("NivelPasivoRepBalGen")
            Me.columnNivelCapitalRepBalGen = MyBase.Columns("NivelCapitalRepBalGen")
            Me.columnNivelIngresosRepEstResul = MyBase.Columns("NivelIngresosRepEstResul")
            Me.columnNivelCostosRepEstResul = MyBase.Columns("NivelCostosRepEstResul")
            Me.columnNivelGastosRepEstResul = MyBase.Columns("NivelGastosRepEstResul")
            Me.columnNumeracionAutoPartidas = MyBase.Columns("NumeracionAutoPartidas")
            Me.columnUltimaPartida = MyBase.Columns("UltimaPartida")
            Me.columnPermisoDescuadre = MyBase.Columns("PermisoDescuadre")
            Me.columnEjecutivo1 = MyBase.Columns("Ejecutivo1")
            Me.columnCargo1 = MyBase.Columns("Cargo1")
            Me.columnEjecutivo2 = MyBase.Columns("Ejecutivo2")
            Me.columnCargo2 = MyBase.Columns("Cargo2")
            Me.columnEjecutivo3 = MyBase.Columns("Ejecutivo3")
            Me.columnCargo3 = MyBase.Columns("Cargo3")
            Me.columnMostrarEjecutivos = MyBase.Columns("MostrarEjecutivos")
            Me.columnRellenoCerosNiveles = MyBase.Columns("RellenoCerosNiveles")
            Me.columnCatalogoCreado = MyBase.Columns("CatalogoCreado")
            Me.columnTipoPresupuesto = MyBase.Columns("TipoPresupuesto")
            Me.columnPresupuestoPorGenero = MyBase.Columns("PresupuestoPorGenero")
            Me.columnTituloMoneda = MyBase.Columns("TituloMoneda")
            Me.columnTituloCambioMoneda = MyBase.Columns("TituloCambioMoneda")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnAñoEnProceso = New Global.System.Data.DataColumn("AñoEnProceso", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAñoEnProceso)
            Me.columnMesEnProceso = New Global.System.Data.DataColumn("MesEnProceso", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMesEnProceso)
            Me.columnMesDeCierre = New Global.System.Data.DataColumn("MesDeCierre", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMesDeCierre)
            Me.columnFechaProceso = New Global.System.Data.DataColumn("FechaProceso", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaProceso)
            Me.columnAñoComparacion1 = New Global.System.Data.DataColumn("AñoComparacion1", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAñoComparacion1)
            Me.columnAñoComparacion2 = New Global.System.Data.DataColumn("AñoComparacion2", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAñoComparacion2)
            Me.columnIndiceActivos = New Global.System.Data.DataColumn("IndiceActivos", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndiceActivos)
            Me.columnIndicePasivos = New Global.System.Data.DataColumn("IndicePasivos", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndicePasivos)
            Me.columnIndiceCapital = New Global.System.Data.DataColumn("IndiceCapital", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndiceCapital)
            Me.columnIndiceIngresos = New Global.System.Data.DataColumn("IndiceIngresos", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndiceIngresos)
            Me.columnIndiceCostos = New Global.System.Data.DataColumn("IndiceCostos", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndiceCostos)
            Me.columnIndiceGastos = New Global.System.Data.DataColumn("IndiceGastos", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndiceGastos)
            Me.columnIndiceOrden = New Global.System.Data.DataColumn("IndiceOrden", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndiceOrden)
            Me.columnNiveles = New Global.System.Data.DataColumn("Niveles", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNiveles)
            Me.columnDigitosNivel1 = New Global.System.Data.DataColumn("DigitosNivel1", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDigitosNivel1)
            Me.columnDigitosNivel2 = New Global.System.Data.DataColumn("DigitosNivel2", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDigitosNivel2)
            Me.columnDigitosNivel3 = New Global.System.Data.DataColumn("DigitosNivel3", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDigitosNivel3)
            Me.columnDigitosNivel4 = New Global.System.Data.DataColumn("DigitosNivel4", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDigitosNivel4)
            Me.columnDigitosNivel5 = New Global.System.Data.DataColumn("DigitosNivel5", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDigitosNivel5)
            Me.columnDigitosNivel6 = New Global.System.Data.DataColumn("DigitosNivel6", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDigitosNivel6)
            Me.columnDigitosNivel7 = New Global.System.Data.DataColumn("DigitosNivel7", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDigitosNivel7)
            Me.columnDigitosNivel8 = New Global.System.Data.DataColumn("DigitosNivel8", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDigitosNivel8)
            Me.columnDigitosNivel9 = New Global.System.Data.DataColumn("DigitosNivel9", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDigitosNivel9)
            Me.columnDigitosNivel10 = New Global.System.Data.DataColumn("DigitosNivel10", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDigitosNivel10)
            Me.columnFormatoLibre = New Global.System.Data.DataColumn("FormatoLibre", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormatoLibre)
            Me.columnNivelActivoRepBalGen = New Global.System.Data.DataColumn("NivelActivoRepBalGen", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNivelActivoRepBalGen)
            Me.columnNivelPasivoRepBalGen = New Global.System.Data.DataColumn("NivelPasivoRepBalGen", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNivelPasivoRepBalGen)
            Me.columnNivelCapitalRepBalGen = New Global.System.Data.DataColumn("NivelCapitalRepBalGen", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNivelCapitalRepBalGen)
            Me.columnNivelIngresosRepEstResul = New Global.System.Data.DataColumn("NivelIngresosRepEstResul", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNivelIngresosRepEstResul)
            Me.columnNivelCostosRepEstResul = New Global.System.Data.DataColumn("NivelCostosRepEstResul", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNivelCostosRepEstResul)
            Me.columnNivelGastosRepEstResul = New Global.System.Data.DataColumn("NivelGastosRepEstResul", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNivelGastosRepEstResul)
            Me.columnNumeracionAutoPartidas = New Global.System.Data.DataColumn("NumeracionAutoPartidas", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeracionAutoPartidas)
            Me.columnUltimaPartida = New Global.System.Data.DataColumn("UltimaPartida", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUltimaPartida)
            Me.columnPermisoDescuadre = New Global.System.Data.DataColumn("PermisoDescuadre", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPermisoDescuadre)
            Me.columnEjecutivo1 = New Global.System.Data.DataColumn("Ejecutivo1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEjecutivo1)
            Me.columnCargo1 = New Global.System.Data.DataColumn("Cargo1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCargo1)
            Me.columnEjecutivo2 = New Global.System.Data.DataColumn("Ejecutivo2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEjecutivo2)
            Me.columnCargo2 = New Global.System.Data.DataColumn("Cargo2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCargo2)
            Me.columnEjecutivo3 = New Global.System.Data.DataColumn("Ejecutivo3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEjecutivo3)
            Me.columnCargo3 = New Global.System.Data.DataColumn("Cargo3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCargo3)
            Me.columnMostrarEjecutivos = New Global.System.Data.DataColumn("MostrarEjecutivos", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMostrarEjecutivos)
            Me.columnRellenoCerosNiveles = New Global.System.Data.DataColumn("RellenoCerosNiveles", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRellenoCerosNiveles)
            Me.columnCatalogoCreado = New Global.System.Data.DataColumn("CatalogoCreado", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCatalogoCreado)
            Me.columnTipoPresupuesto = New Global.System.Data.DataColumn("TipoPresupuesto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoPresupuesto)
            Me.columnPresupuestoPorGenero = New Global.System.Data.DataColumn("PresupuestoPorGenero", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresupuestoPorGenero)
            Me.columnTituloMoneda = New Global.System.Data.DataColumn("TituloMoneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTituloMoneda)
            Me.columnTituloCambioMoneda = New Global.System.Data.DataColumn("TituloCambioMoneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTituloCambioMoneda)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, True))
            Me.columnId.AutoIncrement = True
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = False
            Me.columnId.ReadOnly = True
            Me.columnId.Unique = True
            Me.columnAñoEnProceso.AllowDBNull = False
            Me.columnAñoEnProceso.DefaultValue = CType(0, Short)
            Me.columnMesEnProceso.AllowDBNull = False
            Me.columnMesEnProceso.DefaultValue = CType(0, Short)
            Me.columnMesDeCierre.AllowDBNull = False
            Me.columnMesDeCierre.DefaultValue = CType(0, Short)
            Me.columnFechaProceso.AllowDBNull = False
            Me.columnAñoComparacion1.AllowDBNull = False
            Me.columnAñoComparacion1.DefaultValue = CType(0, Short)
            Me.columnAñoComparacion2.AllowDBNull = False
            Me.columnAñoComparacion2.DefaultValue = CType(0, Short)
            Me.columnIndiceActivos.AllowDBNull = False
            Me.columnIndiceActivos.DefaultValue = CType(0, Short)
            Me.columnIndicePasivos.AllowDBNull = False
            Me.columnIndicePasivos.DefaultValue = CType(0, Short)
            Me.columnIndiceCapital.AllowDBNull = False
            Me.columnIndiceCapital.DefaultValue = CType(0, Short)
            Me.columnIndiceIngresos.AllowDBNull = False
            Me.columnIndiceIngresos.DefaultValue = CType(0, Short)
            Me.columnIndiceCostos.AllowDBNull = False
            Me.columnIndiceCostos.DefaultValue = CType(0, Short)
            Me.columnIndiceGastos.AllowDBNull = False
            Me.columnIndiceGastos.DefaultValue = CType(0, Short)
            Me.columnIndiceOrden.AllowDBNull = False
            Me.columnIndiceOrden.DefaultValue = CType(0, Short)
            Me.columnNiveles.AllowDBNull = False
            Me.columnNiveles.DefaultValue = CType(0, Short)
            Me.columnDigitosNivel1.AllowDBNull = False
            Me.columnDigitosNivel1.DefaultValue = CType(0, Short)
            Me.columnDigitosNivel2.AllowDBNull = False
            Me.columnDigitosNivel2.DefaultValue = CType(0, Short)
            Me.columnDigitosNivel3.AllowDBNull = False
            Me.columnDigitosNivel3.DefaultValue = CType(0, Short)
            Me.columnDigitosNivel4.AllowDBNull = False
            Me.columnDigitosNivel4.DefaultValue = CType(0, Short)
            Me.columnDigitosNivel5.AllowDBNull = False
            Me.columnDigitosNivel5.DefaultValue = CType(0, Short)
            Me.columnDigitosNivel6.AllowDBNull = False
            Me.columnDigitosNivel6.DefaultValue = CType(0, Short)
            Me.columnDigitosNivel7.AllowDBNull = False
            Me.columnDigitosNivel7.DefaultValue = CType(0, Short)
            Me.columnDigitosNivel8.AllowDBNull = False
            Me.columnDigitosNivel8.DefaultValue = CType(0, Short)
            Me.columnDigitosNivel9.AllowDBNull = False
            Me.columnDigitosNivel9.DefaultValue = CType(0, Short)
            Me.columnDigitosNivel10.AllowDBNull = False
            Me.columnDigitosNivel10.DefaultValue = CType(0, Short)
            Me.columnFormatoLibre.AllowDBNull = False
            Me.columnFormatoLibre.DefaultValue = CType(False, Boolean)
            Me.columnNivelActivoRepBalGen.AllowDBNull = False
            Me.columnNivelActivoRepBalGen.DefaultValue = CType(0, Short)
            Me.columnNivelPasivoRepBalGen.AllowDBNull = False
            Me.columnNivelPasivoRepBalGen.DefaultValue = CType(0, Short)
            Me.columnNivelCapitalRepBalGen.AllowDBNull = False
            Me.columnNivelCapitalRepBalGen.DefaultValue = CType(0, Short)
            Me.columnNivelIngresosRepEstResul.AllowDBNull = False
            Me.columnNivelIngresosRepEstResul.DefaultValue = CType(0, Short)
            Me.columnNivelCostosRepEstResul.AllowDBNull = False
            Me.columnNivelCostosRepEstResul.DefaultValue = CType(0, Short)
            Me.columnNivelGastosRepEstResul.AllowDBNull = False
            Me.columnNivelGastosRepEstResul.DefaultValue = CType(0, Short)
            Me.columnNumeracionAutoPartidas.AllowDBNull = False
            Me.columnNumeracionAutoPartidas.DefaultValue = CType(False, Boolean)
            Me.columnUltimaPartida.AllowDBNull = False
            Me.columnUltimaPartida.DefaultValue = CType(0, Integer)
            Me.columnPermisoDescuadre.AllowDBNull = False
            Me.columnPermisoDescuadre.DefaultValue = CType(False, Boolean)
            Me.columnEjecutivo1.MaxLength = 50
            Me.columnCargo1.MaxLength = 50
            Me.columnEjecutivo2.MaxLength = 50
            Me.columnCargo2.MaxLength = 50
            Me.columnEjecutivo3.MaxLength = 50
            Me.columnCargo3.MaxLength = 50
            Me.columnMostrarEjecutivos.AllowDBNull = False
            Me.columnMostrarEjecutivos.DefaultValue = CType(False, Boolean)
            Me.columnRellenoCerosNiveles.AllowDBNull = False
            Me.columnRellenoCerosNiveles.DefaultValue = CType(0, Short)
            Me.columnCatalogoCreado.AllowDBNull = False
            Me.columnCatalogoCreado.DefaultValue = CType(False, Boolean)
            Me.columnTipoPresupuesto.AllowDBNull = False
            Me.columnTipoPresupuesto.MaxLength = 1
            Me.columnPresupuestoPorGenero.AllowDBNull = False
            Me.columnPresupuestoPorGenero.DefaultValue = CType(False, Boolean)
            Me.columnTituloMoneda.MaxLength = 100
            Me.columnTituloCambioMoneda.MaxLength = 100
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewCTConfRow() As CTConfRow
            Return CType(Me.NewRow, CTConfRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CTConfRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CTConfRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CTConfRowChangedEvent) Is Nothing) Then
                RaiseEvent CTConfRowChanged(Me, New CTConfRowChangeEvent(CType(e.Row, CTConfRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CTConfRowChangingEvent) Is Nothing) Then
                RaiseEvent CTConfRowChanging(Me, New CTConfRowChangeEvent(CType(e.Row, CTConfRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CTConfRowDeletedEvent) Is Nothing) Then
                RaiseEvent CTConfRowDeleted(Me, New CTConfRowChangeEvent(CType(e.Row, CTConfRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CTConfRowDeletingEvent) Is Nothing) Then
                RaiseEvent CTConfRowDeleting(Me, New CTConfRowChangeEvent(CType(e.Row, CTConfRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveCTConfRow(ByVal row As CTConfRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CTConfDataSet = New CTConfDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CTConfDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CTConfRow
        Inherits Global.System.Data.DataRow

        Private tableCTConf As CTConfDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCTConf = CType(Me.Table, CTConfDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableCTConf.IdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCTConf.IdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AñoEnProceso() As Short
            Get
                Return CType(Me(Me.tableCTConf.AñoEnProcesoColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.AñoEnProcesoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MesEnProceso() As Short
            Get
                Return CType(Me(Me.tableCTConf.MesEnProcesoColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.MesEnProcesoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MesDeCierre() As Short
            Get
                Return CType(Me(Me.tableCTConf.MesDeCierreColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.MesDeCierreColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaProceso() As Date
            Get
                Return CType(Me(Me.tableCTConf.FechaProcesoColumn), Date)
            End Get
            Set(value As Date)
                Me(Me.tableCTConf.FechaProcesoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AñoComparacion1() As Short
            Get
                Return CType(Me(Me.tableCTConf.AñoComparacion1Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.AñoComparacion1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AñoComparacion2() As Short
            Get
                Return CType(Me(Me.tableCTConf.AñoComparacion2Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.AñoComparacion2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndiceActivos() As Short
            Get
                Return CType(Me(Me.tableCTConf.IndiceActivosColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.IndiceActivosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndicePasivos() As Short
            Get
                Return CType(Me(Me.tableCTConf.IndicePasivosColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.IndicePasivosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndiceCapital() As Short
            Get
                Return CType(Me(Me.tableCTConf.IndiceCapitalColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.IndiceCapitalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndiceIngresos() As Short
            Get
                Return CType(Me(Me.tableCTConf.IndiceIngresosColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.IndiceIngresosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndiceCostos() As Short
            Get
                Return CType(Me(Me.tableCTConf.IndiceCostosColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.IndiceCostosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndiceGastos() As Short
            Get
                Return CType(Me(Me.tableCTConf.IndiceGastosColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.IndiceGastosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndiceOrden() As Short
            Get
                Return CType(Me(Me.tableCTConf.IndiceOrdenColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.IndiceOrdenColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Niveles() As Short
            Get
                Return CType(Me(Me.tableCTConf.NivelesColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.NivelesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DigitosNivel1() As Short
            Get
                Return CType(Me(Me.tableCTConf.DigitosNivel1Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.DigitosNivel1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DigitosNivel2() As Short
            Get
                Return CType(Me(Me.tableCTConf.DigitosNivel2Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.DigitosNivel2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DigitosNivel3() As Short
            Get
                Return CType(Me(Me.tableCTConf.DigitosNivel3Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.DigitosNivel3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DigitosNivel4() As Short
            Get
                Return CType(Me(Me.tableCTConf.DigitosNivel4Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.DigitosNivel4Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DigitosNivel5() As Short
            Get
                Return CType(Me(Me.tableCTConf.DigitosNivel5Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.DigitosNivel5Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DigitosNivel6() As Short
            Get
                Return CType(Me(Me.tableCTConf.DigitosNivel6Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.DigitosNivel6Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DigitosNivel7() As Short
            Get
                Return CType(Me(Me.tableCTConf.DigitosNivel7Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.DigitosNivel7Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DigitosNivel8() As Short
            Get
                Return CType(Me(Me.tableCTConf.DigitosNivel8Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.DigitosNivel8Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DigitosNivel9() As Short
            Get
                Return CType(Me(Me.tableCTConf.DigitosNivel9Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.DigitosNivel9Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DigitosNivel10() As Short
            Get
                Return CType(Me(Me.tableCTConf.DigitosNivel10Column), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.DigitosNivel10Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FormatoLibre() As Boolean
            Get
                Return CType(Me(Me.tableCTConf.FormatoLibreColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tableCTConf.FormatoLibreColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NivelActivoRepBalGen() As Short
            Get
                Return CType(Me(Me.tableCTConf.NivelActivoRepBalGenColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.NivelActivoRepBalGenColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NivelPasivoRepBalGen() As Short
            Get
                Return CType(Me(Me.tableCTConf.NivelPasivoRepBalGenColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.NivelPasivoRepBalGenColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NivelCapitalRepBalGen() As Short
            Get
                Return CType(Me(Me.tableCTConf.NivelCapitalRepBalGenColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.NivelCapitalRepBalGenColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NivelIngresosRepEstResul() As Short
            Get
                Return CType(Me(Me.tableCTConf.NivelIngresosRepEstResulColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.NivelIngresosRepEstResulColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NivelCostosRepEstResul() As Short
            Get
                Return CType(Me(Me.tableCTConf.NivelCostosRepEstResulColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.NivelCostosRepEstResulColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NivelGastosRepEstResul() As Short
            Get
                Return CType(Me(Me.tableCTConf.NivelGastosRepEstResulColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.NivelGastosRepEstResulColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumeracionAutoPartidas() As Boolean
            Get
                Return CType(Me(Me.tableCTConf.NumeracionAutoPartidasColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tableCTConf.NumeracionAutoPartidasColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UltimaPartida() As Integer
            Get
                Return CType(Me(Me.tableCTConf.UltimaPartidaColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableCTConf.UltimaPartidaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PermisoDescuadre() As Boolean
            Get
                Return CType(Me(Me.tableCTConf.PermisoDescuadreColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tableCTConf.PermisoDescuadreColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Ejecutivo1() As String
            Get
                Try
                    Return CType(Me(Me.tableCTConf.Ejecutivo1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Ejecutivo1' de la tabla 'CTConf' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCTConf.Ejecutivo1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cargo1() As String
            Get
                Try
                    Return CType(Me(Me.tableCTConf.Cargo1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Cargo1' de la tabla 'CTConf' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCTConf.Cargo1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Ejecutivo2() As String
            Get
                Try
                    Return CType(Me(Me.tableCTConf.Ejecutivo2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Ejecutivo2' de la tabla 'CTConf' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCTConf.Ejecutivo2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cargo2() As String
            Get
                Try
                    Return CType(Me(Me.tableCTConf.Cargo2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Cargo2' de la tabla 'CTConf' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCTConf.Cargo2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Ejecutivo3() As String
            Get
                Try
                    Return CType(Me(Me.tableCTConf.Ejecutivo3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Ejecutivo3' de la tabla 'CTConf' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCTConf.Ejecutivo3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Cargo3() As String
            Get
                Try
                    Return CType(Me(Me.tableCTConf.Cargo3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Cargo3' de la tabla 'CTConf' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCTConf.Cargo3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MostrarEjecutivos() As Boolean
            Get
                Return CType(Me(Me.tableCTConf.MostrarEjecutivosColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tableCTConf.MostrarEjecutivosColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RellenoCerosNiveles() As Short
            Get
                Return CType(Me(Me.tableCTConf.RellenoCerosNivelesColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCTConf.RellenoCerosNivelesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CatalogoCreado() As Boolean
            Get
                Return CType(Me(Me.tableCTConf.CatalogoCreadoColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tableCTConf.CatalogoCreadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoPresupuesto() As String
            Get
                Return CType(Me(Me.tableCTConf.TipoPresupuestoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCTConf.TipoPresupuestoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PresupuestoPorGenero() As Boolean
            Get
                Return CType(Me(Me.tableCTConf.PresupuestoPorGeneroColumn), Boolean)
            End Get
            Set(value As Boolean)
                Me(Me.tableCTConf.PresupuestoPorGeneroColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TituloMoneda() As String
            Get
                Try
                    Return CType(Me(Me.tableCTConf.TituloMonedaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TituloMoneda' de la tabla 'CTConf' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCTConf.TituloMonedaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TituloCambioMoneda() As String
            Get
                Try
                    Return CType(Me(Me.tableCTConf.TituloCambioMonedaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TituloCambioMoneda' de la tabla 'CTConf' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCTConf.TituloCambioMonedaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEjecutivo1Null() As Boolean
            Return Me.IsNull(Me.tableCTConf.Ejecutivo1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEjecutivo1Null()
            Me(Me.tableCTConf.Ejecutivo1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCargo1Null() As Boolean
            Return Me.IsNull(Me.tableCTConf.Cargo1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCargo1Null()
            Me(Me.tableCTConf.Cargo1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEjecutivo2Null() As Boolean
            Return Me.IsNull(Me.tableCTConf.Ejecutivo2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEjecutivo2Null()
            Me(Me.tableCTConf.Ejecutivo2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCargo2Null() As Boolean
            Return Me.IsNull(Me.tableCTConf.Cargo2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCargo2Null()
            Me(Me.tableCTConf.Cargo2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEjecutivo3Null() As Boolean
            Return Me.IsNull(Me.tableCTConf.Ejecutivo3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEjecutivo3Null()
            Me(Me.tableCTConf.Ejecutivo3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCargo3Null() As Boolean
            Return Me.IsNull(Me.tableCTConf.Cargo3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCargo3Null()
            Me(Me.tableCTConf.Cargo3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTituloMonedaNull() As Boolean
            Return Me.IsNull(Me.tableCTConf.TituloMonedaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTituloMonedaNull()
            Me(Me.tableCTConf.TituloMonedaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTituloCambioMonedaNull() As Boolean
            Return Me.IsNull(Me.tableCTConf.TituloCambioMonedaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTituloCambioMonedaNull()
            Me(Me.tableCTConf.TituloCambioMonedaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class CTConfRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As CTConfRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As CTConfRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As CTConfRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace CTConfDataSetTableAdapters

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class CTConfTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CTConf"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("AñoEnProceso", "AñoEnProceso")
            tableMapping.ColumnMappings.Add("MesEnProceso", "MesEnProceso")
            tableMapping.ColumnMappings.Add("MesDeCierre", "MesDeCierre")
            tableMapping.ColumnMappings.Add("FechaProceso", "FechaProceso")
            tableMapping.ColumnMappings.Add("AñoComparacion1", "AñoComparacion1")
            tableMapping.ColumnMappings.Add("AñoComparacion2", "AñoComparacion2")
            tableMapping.ColumnMappings.Add("IndiceActivos", "IndiceActivos")
            tableMapping.ColumnMappings.Add("IndicePasivos", "IndicePasivos")
            tableMapping.ColumnMappings.Add("IndiceCapital", "IndiceCapital")
            tableMapping.ColumnMappings.Add("IndiceIngresos", "IndiceIngresos")
            tableMapping.ColumnMappings.Add("IndiceCostos", "IndiceCostos")
            tableMapping.ColumnMappings.Add("IndiceGastos", "IndiceGastos")
            tableMapping.ColumnMappings.Add("IndiceOrden", "IndiceOrden")
            tableMapping.ColumnMappings.Add("Niveles", "Niveles")
            tableMapping.ColumnMappings.Add("DigitosNivel1", "DigitosNivel1")
            tableMapping.ColumnMappings.Add("DigitosNivel2", "DigitosNivel2")
            tableMapping.ColumnMappings.Add("DigitosNivel3", "DigitosNivel3")
            tableMapping.ColumnMappings.Add("DigitosNivel4", "DigitosNivel4")
            tableMapping.ColumnMappings.Add("DigitosNivel5", "DigitosNivel5")
            tableMapping.ColumnMappings.Add("DigitosNivel6", "DigitosNivel6")
            tableMapping.ColumnMappings.Add("DigitosNivel7", "DigitosNivel7")
            tableMapping.ColumnMappings.Add("DigitosNivel8", "DigitosNivel8")
            tableMapping.ColumnMappings.Add("DigitosNivel9", "DigitosNivel9")
            tableMapping.ColumnMappings.Add("DigitosNivel10", "DigitosNivel10")
            tableMapping.ColumnMappings.Add("FormatoLibre", "FormatoLibre")
            tableMapping.ColumnMappings.Add("NivelActivoRepBalGen", "NivelActivoRepBalGen")
            tableMapping.ColumnMappings.Add("NivelPasivoRepBalGen", "NivelPasivoRepBalGen")
            tableMapping.ColumnMappings.Add("NivelCapitalRepBalGen", "NivelCapitalRepBalGen")
            tableMapping.ColumnMappings.Add("NivelIngresosRepEstResul", "NivelIngresosRepEstResul")
            tableMapping.ColumnMappings.Add("NivelCostosRepEstResul", "NivelCostosRepEstResul")
            tableMapping.ColumnMappings.Add("NivelGastosRepEstResul", "NivelGastosRepEstResul")
            tableMapping.ColumnMappings.Add("NumeracionAutoPartidas", "NumeracionAutoPartidas")
            tableMapping.ColumnMappings.Add("UltimaPartida", "UltimaPartida")
            tableMapping.ColumnMappings.Add("PermisoDescuadre", "PermisoDescuadre")
            tableMapping.ColumnMappings.Add("Ejecutivo1", "Ejecutivo1")
            tableMapping.ColumnMappings.Add("Cargo1", "Cargo1")
            tableMapping.ColumnMappings.Add("Ejecutivo2", "Ejecutivo2")
            tableMapping.ColumnMappings.Add("Cargo2", "Cargo2")
            tableMapping.ColumnMappings.Add("Ejecutivo3", "Ejecutivo3")
            tableMapping.ColumnMappings.Add("Cargo3", "Cargo3")
            tableMapping.ColumnMappings.Add("MostrarEjecutivos", "MostrarEjecutivos")
            tableMapping.ColumnMappings.Add("RellenoCerosNiveles", "RellenoCerosNiveles")
            tableMapping.ColumnMappings.Add("CatalogoCreado", "CatalogoCreado")
            tableMapping.ColumnMappings.Add("TipoPresupuesto", "TipoPresupuesto")
            tableMapping.ColumnMappings.Add("PresupuestoPorGenero", "PresupuestoPorGenero")
            tableMapping.ColumnMappings.Add("TituloMoneda", "TituloMoneda")
            tableMapping.ColumnMappings.Add("TituloCambioMoneda", "TituloCambioMoneda")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CTConf] WHERE (([Id] = @Original_Id) AND ([AñoEnProceso] = @Original" & _
                "_AñoEnProceso) AND ([MesEnProceso] = @Original_MesEnProceso) AND ([MesDeCierre] " & _
                "= @Original_MesDeCierre) AND ([FechaProceso] = @Original_FechaProceso) AND ([Año" & _
                "Comparacion1] = @Original_AñoComparacion1) AND ([AñoComparacion2] = @Original_Añ" & _
                "oComparacion2) AND ([IndiceActivos] = @Original_IndiceActivos) AND ([IndicePasiv" & _
                "os] = @Original_IndicePasivos) AND ([IndiceCapital] = @Original_IndiceCapital) A" & _
                "ND ([IndiceIngresos] = @Original_IndiceIngresos) AND ([IndiceCostos] = @Original" & _
                "_IndiceCostos) AND ([IndiceGastos] = @Original_IndiceGastos) AND ([IndiceOrden] " & _
                "= @Original_IndiceOrden) AND ([Niveles] = @Original_Niveles) AND ([DigitosNivel1" & _
                "] = @Original_DigitosNivel1) AND ([DigitosNivel2] = @Original_DigitosNivel2) AND" & _
                " ([DigitosNivel3] = @Original_DigitosNivel3) AND ([DigitosNivel4] = @Original_Di" & _
                "gitosNivel4) AND ([DigitosNivel5] = @Original_DigitosNivel5) AND ([DigitosNivel6" & _
                "] = @Original_DigitosNivel6) AND ([DigitosNivel7] = @Original_DigitosNivel7) AND" & _
                " ([DigitosNivel8] = @Original_DigitosNivel8) AND ([DigitosNivel9] = @Original_Di" & _
                "gitosNivel9) AND ([DigitosNivel10] = @Original_DigitosNivel10) AND ([FormatoLibr" & _
                "e] = @Original_FormatoLibre) AND ([NivelActivoRepBalGen] = @Original_NivelActivo" & _
                "RepBalGen) AND ([NivelPasivoRepBalGen] = @Original_NivelPasivoRepBalGen) AND ([N" & _
                "ivelCapitalRepBalGen] = @Original_NivelCapitalRepBalGen) AND ([NivelIngresosRepE" & _
                "stResul] = @Original_NivelIngresosRepEstResul) AND ([NivelCostosRepEstResul] = @" & _
                "Original_NivelCostosRepEstResul) AND ([NivelGastosRepEstResul] = @Original_Nivel" & _
                "GastosRepEstResul) AND ([NumeracionAutoPartidas] = @Original_NumeracionAutoParti" & _
                "das) AND ([UltimaPartida] = @Original_UltimaPartida) AND ([PermisoDescuadre] = @" & _
                "Original_PermisoDescuadre) AND ((@IsNull_Ejecutivo1 = 1 AND [Ejecutivo1] IS NULL" & _
                ") OR ([Ejecutivo1] = @Original_Ejecutivo1)) AND ((@IsNull_Cargo1 = 1 AND [Cargo1" & _
                "] IS NULL) OR ([Cargo1] = @Original_Cargo1)) AND ((@IsNull_Ejecutivo2 = 1 AND [E" & _
                "jecutivo2] IS NULL) OR ([Ejecutivo2] = @Original_Ejecutivo2)) AND ((@IsNull_Carg" & _
                "o2 = 1 AND [Cargo2] IS NULL) OR ([Cargo2] = @Original_Cargo2)) AND ((@IsNull_Eje" & _
                "cutivo3 = 1 AND [Ejecutivo3] IS NULL) OR ([Ejecutivo3] = @Original_Ejecutivo3)) " & _
                "AND ((@IsNull_Cargo3 = 1 AND [Cargo3] IS NULL) OR ([Cargo3] = @Original_Cargo3))" & _
                " AND ([MostrarEjecutivos] = @Original_MostrarEjecutivos) AND ([RellenoCerosNivel" & _
                "es] = @Original_RellenoCerosNiveles) AND ([CatalogoCreado] = @Original_CatalogoC" & _
                "reado) AND ([TipoPresupuesto] = @Original_TipoPresupuesto) AND ([PresupuestoPorG" & _
                "enero] = @Original_PresupuestoPorGenero) AND ((@IsNull_TituloMoneda = 1 AND [Tit" & _
                "uloMoneda] IS NULL) OR ([TituloMoneda] = @Original_TituloMoneda)) AND ((@IsNull_" & _
                "TituloCambioMoneda = 1 AND [TituloCambioMoneda] IS NULL) OR ([TituloCambioMoneda" & _
                "] = @Original_TituloCambioMoneda)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AñoEnProceso", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoEnProceso", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MesEnProceso", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MesEnProceso", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MesDeCierre", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MesDeCierre", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FechaProceso", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FechaProceso", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AñoComparacion1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoComparacion1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AñoComparacion2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoComparacion2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceActivos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceActivos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndicePasivos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicePasivos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceCapital", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceCapital", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceIngresos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceIngresos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceCostos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceCostos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceGastos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceGastos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceOrden", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceOrden", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Niveles", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Niveles", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel3", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel4", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel5", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel5", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel6", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel6", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel7", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel7", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel8", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel8", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel9", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel9", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel10", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel10", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FormatoLibre", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FormatoLibre", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelActivoRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelActivoRepBalGen", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelPasivoRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelPasivoRepBalGen", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelCapitalRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelCapitalRepBalGen", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelIngresosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelIngresosRepEstResul", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelCostosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelCostosRepEstResul", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelGastosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelGastosRepEstResul", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NumeracionAutoPartidas", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumeracionAutoPartidas", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UltimaPartida", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UltimaPartida", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PermisoDescuadre", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PermisoDescuadre", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ejecutivo1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo1", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ejecutivo1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Cargo1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo1", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Cargo1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ejecutivo2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo2", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ejecutivo2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Cargo2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo2", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Cargo2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ejecutivo3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo3", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ejecutivo3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo3", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Cargo3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo3", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Cargo3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo3", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MostrarEjecutivos", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MostrarEjecutivos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RellenoCerosNiveles", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RellenoCerosNiveles", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CatalogoCreado", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CatalogoCreado", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TipoPresupuesto", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoPresupuesto", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresupuestoPorGenero", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresupuestoPorGenero", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TituloMoneda", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloMoneda", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TituloMoneda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloMoneda", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TituloCambioMoneda", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloCambioMoneda", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TituloCambioMoneda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloCambioMoneda", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CTConf] ([AñoEnProceso], [MesEnProceso], [MesDeCierre], [FechaProces" & _
                "o], [AñoComparacion1], [AñoComparacion2], [IndiceActivos], [IndicePasivos], [Ind" & _
                "iceCapital], [IndiceIngresos], [IndiceCostos], [IndiceGastos], [IndiceOrden], [N" & _
                "iveles], [DigitosNivel1], [DigitosNivel2], [DigitosNivel3], [DigitosNivel4], [Di" & _
                "gitosNivel5], [DigitosNivel6], [DigitosNivel7], [DigitosNivel8], [DigitosNivel9]" & _
                ", [DigitosNivel10], [FormatoLibre], [NivelActivoRepBalGen], [NivelPasivoRepBalGe" & _
                "n], [NivelCapitalRepBalGen], [NivelIngresosRepEstResul], [NivelCostosRepEstResul" & _
                "], [NivelGastosRepEstResul], [NumeracionAutoPartidas], [UltimaPartida], [Permiso" & _
                "Descuadre], [Ejecutivo1], [Cargo1], [Ejecutivo2], [Cargo2], [Ejecutivo3], [Cargo" & _
                "3], [MostrarEjecutivos], [RellenoCerosNiveles], [CatalogoCreado], [TipoPresupues" & _
                "to], [PresupuestoPorGenero], [TituloMoneda], [TituloCambioMoneda]) VALUES (@AñoE" & _
                "nProceso, @MesEnProceso, @MesDeCierre, @FechaProceso, @AñoComparacion1, @AñoComp" & _
                "aracion2, @IndiceActivos, @IndicePasivos, @IndiceCapital, @IndiceIngresos, @Indi" & _
                "ceCostos, @IndiceGastos, @IndiceOrden, @Niveles, @DigitosNivel1, @DigitosNivel2," & _
                " @DigitosNivel3, @DigitosNivel4, @DigitosNivel5, @DigitosNivel6, @DigitosNivel7," & _
                " @DigitosNivel8, @DigitosNivel9, @DigitosNivel10, @FormatoLibre, @NivelActivoRep" & _
                "BalGen, @NivelPasivoRepBalGen, @NivelCapitalRepBalGen, @NivelIngresosRepEstResul" & _
                ", @NivelCostosRepEstResul, @NivelGastosRepEstResul, @NumeracionAutoPartidas, @Ul" & _
                "timaPartida, @PermisoDescuadre, @Ejecutivo1, @Cargo1, @Ejecutivo2, @Cargo2, @Eje" & _
                "cutivo3, @Cargo3, @MostrarEjecutivos, @RellenoCerosNiveles, @CatalogoCreado, @Ti" & _
                "poPresupuesto, @PresupuestoPorGenero, @TituloMoneda, @TituloCambioMoneda);" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELE" & _
                "CT Id, AñoEnProceso, MesEnProceso, MesDeCierre, FechaProceso, AñoComparacion1, A" & _
                "ñoComparacion2, IndiceActivos, IndicePasivos, IndiceCapital, IndiceIngresos, Ind" & _
                "iceCostos, IndiceGastos, IndiceOrden, Niveles, DigitosNivel1, DigitosNivel2, Dig" & _
                "itosNivel3, DigitosNivel4, DigitosNivel5, DigitosNivel6, DigitosNivel7, DigitosN" & _
                "ivel8, DigitosNivel9, DigitosNivel10, FormatoLibre, NivelActivoRepBalGen, NivelP" & _
                "asivoRepBalGen, NivelCapitalRepBalGen, NivelIngresosRepEstResul, NivelCostosRepE" & _
                "stResul, NivelGastosRepEstResul, NumeracionAutoPartidas, UltimaPartida, PermisoD" & _
                "escuadre, Ejecutivo1, Cargo1, Ejecutivo2, Cargo2, Ejecutivo3, Cargo3, MostrarEje" & _
                "cutivos, RellenoCerosNiveles, CatalogoCreado, TipoPresupuesto, PresupuestoPorGen" & _
                "ero, TituloMoneda, TituloCambioMoneda FROM CTConf WHERE (Id = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AñoEnProceso", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoEnProceso", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MesEnProceso", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MesEnProceso", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MesDeCierre", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MesDeCierre", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaProceso", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FechaProceso", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AñoComparacion1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoComparacion1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AñoComparacion2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoComparacion2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceActivos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceActivos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndicePasivos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicePasivos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceCapital", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceCapital", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceIngresos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceIngresos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceCostos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceCostos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceGastos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceGastos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceOrden", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceOrden", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Niveles", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Niveles", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel3", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel4", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel5", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel5", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel6", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel6", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel7", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel7", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel8", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel8", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel9", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel9", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel10", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel10", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormatoLibre", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FormatoLibre", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelActivoRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelActivoRepBalGen", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelPasivoRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelPasivoRepBalGen", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelCapitalRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelCapitalRepBalGen", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelIngresosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelIngresosRepEstResul", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelCostosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelCostosRepEstResul", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelGastosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelGastosRepEstResul", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumeracionAutoPartidas", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumeracionAutoPartidas", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UltimaPartida", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UltimaPartida", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PermisoDescuadre", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PermisoDescuadre", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ejecutivo1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cargo1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ejecutivo2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cargo2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ejecutivo3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo3", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cargo3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo3", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MostrarEjecutivos", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MostrarEjecutivos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RellenoCerosNiveles", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RellenoCerosNiveles", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CatalogoCreado", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CatalogoCreado", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoPresupuesto", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoPresupuesto", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresupuestoPorGenero", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresupuestoPorGenero", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TituloMoneda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloMoneda", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TituloCambioMoneda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloCambioMoneda", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CTConf] SET [AñoEnProceso] = @AñoEnProceso, [MesEnProceso] = @MesEnProces" & _
                "o, [MesDeCierre] = @MesDeCierre, [FechaProceso] = @FechaProceso, [AñoComparacion" & _
                "1] = @AñoComparacion1, [AñoComparacion2] = @AñoComparacion2, [IndiceActivos] = @" & _
                "IndiceActivos, [IndicePasivos] = @IndicePasivos, [IndiceCapital] = @IndiceCapita" & _
                "l, [IndiceIngresos] = @IndiceIngresos, [IndiceCostos] = @IndiceCostos, [IndiceGa" & _
                "stos] = @IndiceGastos, [IndiceOrden] = @IndiceOrden, [Niveles] = @Niveles, [Digi" & _
                "tosNivel1] = @DigitosNivel1, [DigitosNivel2] = @DigitosNivel2, [DigitosNivel3] =" & _
                " @DigitosNivel3, [DigitosNivel4] = @DigitosNivel4, [DigitosNivel5] = @DigitosNiv" & _
                "el5, [DigitosNivel6] = @DigitosNivel6, [DigitosNivel7] = @DigitosNivel7, [Digito" & _
                "sNivel8] = @DigitosNivel8, [DigitosNivel9] = @DigitosNivel9, [DigitosNivel10] = " & _
                "@DigitosNivel10, [FormatoLibre] = @FormatoLibre, [NivelActivoRepBalGen] = @Nivel" & _
                "ActivoRepBalGen, [NivelPasivoRepBalGen] = @NivelPasivoRepBalGen, [NivelCapitalRe" & _
                "pBalGen] = @NivelCapitalRepBalGen, [NivelIngresosRepEstResul] = @NivelIngresosRe" & _
                "pEstResul, [NivelCostosRepEstResul] = @NivelCostosRepEstResul, [NivelGastosRepEs" & _
                "tResul] = @NivelGastosRepEstResul, [NumeracionAutoPartidas] = @NumeracionAutoPar" & _
                "tidas, [UltimaPartida] = @UltimaPartida, [PermisoDescuadre] = @PermisoDescuadre," & _
                " [Ejecutivo1] = @Ejecutivo1, [Cargo1] = @Cargo1, [Ejecutivo2] = @Ejecutivo2, [Ca" & _
                "rgo2] = @Cargo2, [Ejecutivo3] = @Ejecutivo3, [Cargo3] = @Cargo3, [MostrarEjecuti" & _
                "vos] = @MostrarEjecutivos, [RellenoCerosNiveles] = @RellenoCerosNiveles, [Catalo" & _
                "goCreado] = @CatalogoCreado, [TipoPresupuesto] = @TipoPresupuesto, [PresupuestoP" & _
                "orGenero] = @PresupuestoPorGenero, [TituloMoneda] = @TituloMoneda, [TituloCambio" & _
                "Moneda] = @TituloCambioMoneda WHERE (([Id] = @Original_Id) AND ([AñoEnProceso] =" & _
                " @Original_AñoEnProceso) AND ([MesEnProceso] = @Original_MesEnProceso) AND ([Mes" & _
                "DeCierre] = @Original_MesDeCierre) AND ([FechaProceso] = @Original_FechaProceso)" & _
                " AND ([AñoComparacion1] = @Original_AñoComparacion1) AND ([AñoComparacion2] = @O" & _
                "riginal_AñoComparacion2) AND ([IndiceActivos] = @Original_IndiceActivos) AND ([I" & _
                "ndicePasivos] = @Original_IndicePasivos) AND ([IndiceCapital] = @Original_Indice" & _
                "Capital) AND ([IndiceIngresos] = @Original_IndiceIngresos) AND ([IndiceCostos] =" & _
                " @Original_IndiceCostos) AND ([IndiceGastos] = @Original_IndiceGastos) AND ([Ind" & _
                "iceOrden] = @Original_IndiceOrden) AND ([Niveles] = @Original_Niveles) AND ([Dig" & _
                "itosNivel1] = @Original_DigitosNivel1) AND ([DigitosNivel2] = @Original_DigitosN" & _
                "ivel2) AND ([DigitosNivel3] = @Original_DigitosNivel3) AND ([DigitosNivel4] = @O" & _
                "riginal_DigitosNivel4) AND ([DigitosNivel5] = @Original_DigitosNivel5) AND ([Dig" & _
                "itosNivel6] = @Original_DigitosNivel6) AND ([DigitosNivel7] = @Original_DigitosN" & _
                "ivel7) AND ([DigitosNivel8] = @Original_DigitosNivel8) AND ([DigitosNivel9] = @O" & _
                "riginal_DigitosNivel9) AND ([DigitosNivel10] = @Original_DigitosNivel10) AND ([F" & _
                "ormatoLibre] = @Original_FormatoLibre) AND ([NivelActivoRepBalGen] = @Original_N" & _
                "ivelActivoRepBalGen) AND ([NivelPasivoRepBalGen] = @Original_NivelPasivoRepBalGe" & _
                "n) AND ([NivelCapitalRepBalGen] = @Original_NivelCapitalRepBalGen) AND ([NivelIn" & _
                "gresosRepEstResul] = @Original_NivelIngresosRepEstResul) AND ([NivelCostosRepEst" & _
                "Resul] = @Original_NivelCostosRepEstResul) AND ([NivelGastosRepEstResul] = @Orig" & _
                "inal_NivelGastosRepEstResul) AND ([NumeracionAutoPartidas] = @Original_Numeracio" & _
                "nAutoPartidas) AND ([UltimaPartida] = @Original_UltimaPartida) AND ([PermisoDesc" & _
                "uadre] = @Original_PermisoDescuadre) AND ((@IsNull_Ejecutivo1 = 1 AND [Ejecutivo" & _
                "1] IS NULL) OR ([Ejecutivo1] = @Original_Ejecutivo1)) AND ((@IsNull_Cargo1 = 1 A" & _
                "ND [Cargo1] IS NULL) OR ([Cargo1] = @Original_Cargo1)) AND ((@IsNull_Ejecutivo2 " & _
                "= 1 AND [Ejecutivo2] IS NULL) OR ([Ejecutivo2] = @Original_Ejecutivo2)) AND ((@I" & _
                "sNull_Cargo2 = 1 AND [Cargo2] IS NULL) OR ([Cargo2] = @Original_Cargo2)) AND ((@" & _
                "IsNull_Ejecutivo3 = 1 AND [Ejecutivo3] IS NULL) OR ([Ejecutivo3] = @Original_Eje" & _
                "cutivo3)) AND ((@IsNull_Cargo3 = 1 AND [Cargo3] IS NULL) OR ([Cargo3] = @Origina" & _
                "l_Cargo3)) AND ([MostrarEjecutivos] = @Original_MostrarEjecutivos) AND ([Relleno" & _
                "CerosNiveles] = @Original_RellenoCerosNiveles) AND ([CatalogoCreado] = @Original" & _
                "_CatalogoCreado) AND ([TipoPresupuesto] = @Original_TipoPresupuesto) AND ([Presu" & _
                "puestoPorGenero] = @Original_PresupuestoPorGenero) AND ((@IsNull_TituloMoneda = " & _
                "1 AND [TituloMoneda] IS NULL) OR ([TituloMoneda] = @Original_TituloMoneda)) AND " & _
                "((@IsNull_TituloCambioMoneda = 1 AND [TituloCambioMoneda] IS NULL) OR ([TituloCa" & _
                "mbioMoneda] = @Original_TituloCambioMoneda)));" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "SELECT Id, AñoEnProceso, MesEnPr" & _
                "oceso, MesDeCierre, FechaProceso, AñoComparacion1, AñoComparacion2, IndiceActivo" & _
                "s, IndicePasivos, IndiceCapital, IndiceIngresos, IndiceCostos, IndiceGastos, Ind" & _
                "iceOrden, Niveles, DigitosNivel1, DigitosNivel2, DigitosNivel3, DigitosNivel4, D" & _
                "igitosNivel5, DigitosNivel6, DigitosNivel7, DigitosNivel8, DigitosNivel9, Digito" & _
                "sNivel10, FormatoLibre, NivelActivoRepBalGen, NivelPasivoRepBalGen, NivelCapital" & _
                "RepBalGen, NivelIngresosRepEstResul, NivelCostosRepEstResul, NivelGastosRepEstRe" & _
                "sul, NumeracionAutoPartidas, UltimaPartida, PermisoDescuadre, Ejecutivo1, Cargo1" & _
                ", Ejecutivo2, Cargo2, Ejecutivo3, Cargo3, MostrarEjecutivos, RellenoCerosNiveles" & _
                ", CatalogoCreado, TipoPresupuesto, PresupuestoPorGenero, TituloMoneda, TituloCam" & _
                "bioMoneda FROM CTConf WHERE (Id = @Id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AñoEnProceso", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoEnProceso", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MesEnProceso", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MesEnProceso", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MesDeCierre", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MesDeCierre", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaProceso", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FechaProceso", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AñoComparacion1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoComparacion1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AñoComparacion2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoComparacion2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceActivos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceActivos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndicePasivos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicePasivos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceCapital", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceCapital", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceIngresos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceIngresos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceCostos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceCostos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceGastos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceGastos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndiceOrden", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceOrden", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Niveles", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Niveles", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel3", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel4", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel5", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel5", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel6", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel6", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel7", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel7", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel8", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel8", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel9", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel9", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DigitosNivel10", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel10", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FormatoLibre", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FormatoLibre", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelActivoRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelActivoRepBalGen", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelPasivoRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelPasivoRepBalGen", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelCapitalRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelCapitalRepBalGen", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelIngresosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelIngresosRepEstResul", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelCostosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelCostosRepEstResul", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NivelGastosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelGastosRepEstResul", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumeracionAutoPartidas", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumeracionAutoPartidas", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UltimaPartida", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UltimaPartida", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PermisoDescuadre", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PermisoDescuadre", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ejecutivo1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cargo1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo1", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ejecutivo2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cargo2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo2", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ejecutivo3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo3", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cargo3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo3", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MostrarEjecutivos", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MostrarEjecutivos", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RellenoCerosNiveles", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RellenoCerosNiveles", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CatalogoCreado", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CatalogoCreado", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoPresupuesto", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoPresupuesto", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PresupuestoPorGenero", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresupuestoPorGenero", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TituloMoneda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloMoneda", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TituloCambioMoneda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloCambioMoneda", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AñoEnProceso", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoEnProceso", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MesEnProceso", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MesEnProceso", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MesDeCierre", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MesDeCierre", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FechaProceso", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FechaProceso", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AñoComparacion1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoComparacion1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AñoComparacion2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AñoComparacion2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceActivos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceActivos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndicePasivos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicePasivos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceCapital", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceCapital", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceIngresos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceIngresos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceCostos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceCostos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceGastos", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceGastos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndiceOrden", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndiceOrden", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Niveles", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Niveles", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel1", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel2", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel3", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel3", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel4", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel4", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel5", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel5", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel6", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel6", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel7", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel7", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel8", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel8", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel9", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel9", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DigitosNivel10", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DigitosNivel10", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FormatoLibre", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FormatoLibre", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelActivoRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelActivoRepBalGen", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelPasivoRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelPasivoRepBalGen", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelCapitalRepBalGen", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelCapitalRepBalGen", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelIngresosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelIngresosRepEstResul", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelCostosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelCostosRepEstResul", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NivelGastosRepEstResul", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NivelGastosRepEstResul", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NumeracionAutoPartidas", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NumeracionAutoPartidas", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UltimaPartida", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UltimaPartida", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PermisoDescuadre", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PermisoDescuadre", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ejecutivo1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo1", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ejecutivo1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Cargo1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo1", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Cargo1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo1", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ejecutivo2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo2", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ejecutivo2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Cargo2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo2", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Cargo2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo2", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Ejecutivo3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo3", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ejecutivo3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ejecutivo3", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Cargo3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo3", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Cargo3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cargo3", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MostrarEjecutivos", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MostrarEjecutivos", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RellenoCerosNiveles", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RellenoCerosNiveles", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CatalogoCreado", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CatalogoCreado", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TipoPresupuesto", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoPresupuesto", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PresupuestoPorGenero", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PresupuestoPorGenero", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TituloMoneda", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloMoneda", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TituloMoneda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloMoneda", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TituloCambioMoneda", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloCambioMoneda", Global.System.Data.DataRowVersion.Original, True, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TituloCambioMoneda", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloCambioMoneda", Global.System.Data.DataRowVersion.Original, False, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.RSIContab.My.MySettings.Default.RSIERP_Conexion
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        Id, AñoEnProceso, MesEnProceso, MesDeCierre, FechaProceso, AñoCompa" & _
                "racion1, AñoComparacion2, IndiceActivos, IndicePasivos, IndiceCapital, IndiceIng" & _
                "resos, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         IndiceCostos, IndiceGastos, IndiceOrden, Nivel" & _
                "es, DigitosNivel1, DigitosNivel2, DigitosNivel3, DigitosNivel4, DigitosNivel5, D" & _
                "igitosNivel6, DigitosNivel7, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         DigitosNivel8, DigitosNi" & _
                "vel9, DigitosNivel10, FormatoLibre, NivelActivoRepBalGen, NivelPasivoRepBalGen, " & _
                "NivelCapitalRepBalGen, NivelIngresosRepEstResul, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         Nive" & _
                "lCostosRepEstResul, NivelGastosRepEstResul, NumeracionAutoPartidas, UltimaPartid" & _
                "a, PermisoDescuadre, Ejecutivo1, Cargo1, Ejecutivo2, Cargo2, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 " & _
                "        Ejecutivo3, Cargo3, MostrarEjecutivos, RellenoCerosNiveles, CatalogoCrea" & _
                "do, TipoPresupuesto, PresupuestoPorGenero, TituloMoneda, TituloCambioMoneda" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FRO" & _
                "M            CTConf"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As CTConfDataSet.CTConfDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As CTConfDataSet.CTConfDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As CTConfDataSet.CTConfDataTable = New CTConfDataSet.CTConfDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As CTConfDataSet.CTConfDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As CTConfDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "CTConf")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, True)> _
        Public Overridable Overloads Function Delete( _
                    ByVal Original_Id As Integer, _
                    ByVal Original_AñoEnProceso As Short, _
                    ByVal Original_MesEnProceso As Short, _
                    ByVal Original_MesDeCierre As Short, _
                    ByVal Original_FechaProceso As Date, _
                    ByVal Original_AñoComparacion1 As Short, _
                    ByVal Original_AñoComparacion2 As Short, _
                    ByVal Original_IndiceActivos As Short, _
                    ByVal Original_IndicePasivos As Short, _
                    ByVal Original_IndiceCapital As Short, _
                    ByVal Original_IndiceIngresos As Short, _
                    ByVal Original_IndiceCostos As Short, _
                    ByVal Original_IndiceGastos As Short, _
                    ByVal Original_IndiceOrden As Short, _
                    ByVal Original_Niveles As Short, _
                    ByVal Original_DigitosNivel1 As Short, _
                    ByVal Original_DigitosNivel2 As Short, _
                    ByVal Original_DigitosNivel3 As Short, _
                    ByVal Original_DigitosNivel4 As Short, _
                    ByVal Original_DigitosNivel5 As Short, _
                    ByVal Original_DigitosNivel6 As Short, _
                    ByVal Original_DigitosNivel7 As Short, _
                    ByVal Original_DigitosNivel8 As Short, _
                    ByVal Original_DigitosNivel9 As Short, _
                    ByVal Original_DigitosNivel10 As Short, _
                    ByVal Original_FormatoLibre As Boolean, _
                    ByVal Original_NivelActivoRepBalGen As Short, _
                    ByVal Original_NivelPasivoRepBalGen As Short, _
                    ByVal Original_NivelCapitalRepBalGen As Short, _
                    ByVal Original_NivelIngresosRepEstResul As Short, _
                    ByVal Original_NivelCostosRepEstResul As Short, _
                    ByVal Original_NivelGastosRepEstResul As Short, _
                    ByVal Original_NumeracionAutoPartidas As Boolean, _
                    ByVal Original_UltimaPartida As Integer, _
                    ByVal Original_PermisoDescuadre As Boolean, _
                    ByVal Original_Ejecutivo1 As String, _
                    ByVal Original_Cargo1 As String, _
                    ByVal Original_Ejecutivo2 As String, _
                    ByVal Original_Cargo2 As String, _
                    ByVal Original_Ejecutivo3 As String, _
                    ByVal Original_Cargo3 As String, _
                    ByVal Original_MostrarEjecutivos As Boolean, _
                    ByVal Original_RellenoCerosNiveles As Short, _
                    ByVal Original_CatalogoCreado As Boolean, _
                    ByVal Original_TipoPresupuesto As String, _
                    ByVal Original_PresupuestoPorGenero As Boolean, _
                    ByVal Original_TituloMoneda As String, _
                    ByVal Original_TituloCambioMoneda As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id, Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_AñoEnProceso, Short)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_MesEnProceso, Short)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_MesDeCierre, Short)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_FechaProceso, Date)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_AñoComparacion1, Short)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_AñoComparacion2, Short)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_IndiceActivos, Short)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_IndicePasivos, Short)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_IndiceCapital, Short)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_IndiceIngresos, Short)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_IndiceCostos, Short)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_IndiceGastos, Short)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_IndiceOrden, Short)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Niveles, Short)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_DigitosNivel1, Short)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DigitosNivel2, Short)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_DigitosNivel3, Short)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_DigitosNivel4, Short)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_DigitosNivel5, Short)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_DigitosNivel6, Short)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_DigitosNivel7, Short)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_DigitosNivel8, Short)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_DigitosNivel9, Short)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_DigitosNivel10, Short)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_FormatoLibre, Boolean)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_NivelActivoRepBalGen, Short)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_NivelPasivoRepBalGen, Short)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_NivelCapitalRepBalGen, Short)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_NivelIngresosRepEstResul, Short)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_NivelCostosRepEstResul, Short)
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_NivelGastosRepEstResul, Short)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_NumeracionAutoPartidas, Boolean)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_UltimaPartida, Integer)
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_PermisoDescuadre, Boolean)
            If (Original_Ejecutivo1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_Ejecutivo1, String)
            End If
            If (Original_Cargo1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_Cargo1, String)
            End If
            If (Original_Ejecutivo2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_Ejecutivo2, String)
            End If
            If (Original_Cargo2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_Cargo2, String)
            End If
            If (Original_Ejecutivo3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_Ejecutivo3, String)
            End If
            If (Original_Cargo3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_Cargo3, String)
            End If
            Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_MostrarEjecutivos, Boolean)
            Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_RellenoCerosNiveles, Short)
            Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_CatalogoCreado, Boolean)
            If (Original_TipoPresupuesto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TipoPresupuesto")
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_TipoPresupuesto, String)
            End If
            Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_PresupuestoPorGenero, Boolean)
            If (Original_TituloMoneda Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_TituloMoneda, String)
            End If
            If (Original_TituloCambioMoneda Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1, Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0, Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_TituloCambioMoneda, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal AñoEnProceso As Short, _
                    ByVal MesEnProceso As Short, _
                    ByVal MesDeCierre As Short, _
                    ByVal FechaProceso As Date, _
                    ByVal AñoComparacion1 As Short, _
                    ByVal AñoComparacion2 As Short, _
                    ByVal IndiceActivos As Short, _
                    ByVal IndicePasivos As Short, _
                    ByVal IndiceCapital As Short, _
                    ByVal IndiceIngresos As Short, _
                    ByVal IndiceCostos As Short, _
                    ByVal IndiceGastos As Short, _
                    ByVal IndiceOrden As Short, _
                    ByVal Niveles As Short, _
                    ByVal DigitosNivel1 As Short, _
                    ByVal DigitosNivel2 As Short, _
                    ByVal DigitosNivel3 As Short, _
                    ByVal DigitosNivel4 As Short, _
                    ByVal DigitosNivel5 As Short, _
                    ByVal DigitosNivel6 As Short, _
                    ByVal DigitosNivel7 As Short, _
                    ByVal DigitosNivel8 As Short, _
                    ByVal DigitosNivel9 As Short, _
                    ByVal DigitosNivel10 As Short, _
                    ByVal FormatoLibre As Boolean, _
                    ByVal NivelActivoRepBalGen As Short, _
                    ByVal NivelPasivoRepBalGen As Short, _
                    ByVal NivelCapitalRepBalGen As Short, _
                    ByVal NivelIngresosRepEstResul As Short, _
                    ByVal NivelCostosRepEstResul As Short, _
                    ByVal NivelGastosRepEstResul As Short, _
                    ByVal NumeracionAutoPartidas As Boolean, _
                    ByVal UltimaPartida As Integer, _
                    ByVal PermisoDescuadre As Boolean, _
                    ByVal Ejecutivo1 As String, _
                    ByVal Cargo1 As String, _
                    ByVal Ejecutivo2 As String, _
                    ByVal Cargo2 As String, _
                    ByVal Ejecutivo3 As String, _
                    ByVal Cargo3 As String, _
                    ByVal MostrarEjecutivos As Boolean, _
                    ByVal RellenoCerosNiveles As Short, _
                    ByVal CatalogoCreado As Boolean, _
                    ByVal TipoPresupuesto As String, _
                    ByVal PresupuestoPorGenero As Boolean, _
                    ByVal TituloMoneda As String, _
                    ByVal TituloCambioMoneda As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(AñoEnProceso, Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(MesEnProceso, Short)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(MesDeCierre, Short)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(FechaProceso, Date)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(AñoComparacion1, Short)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(AñoComparacion2, Short)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(IndiceActivos, Short)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(IndicePasivos, Short)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(IndiceCapital, Short)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(IndiceIngresos, Short)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(IndiceCostos, Short)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(IndiceGastos, Short)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(IndiceOrden, Short)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(Niveles, Short)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(DigitosNivel1, Short)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(DigitosNivel2, Short)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(DigitosNivel3, Short)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(DigitosNivel4, Short)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(DigitosNivel5, Short)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(DigitosNivel6, Short)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(DigitosNivel7, Short)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(DigitosNivel8, Short)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(DigitosNivel9, Short)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(DigitosNivel10, Short)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(FormatoLibre, Boolean)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(NivelActivoRepBalGen, Short)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(NivelPasivoRepBalGen, Short)
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(NivelCapitalRepBalGen, Short)
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(NivelIngresosRepEstResul, Short)
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(NivelCostosRepEstResul, Short)
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(NivelGastosRepEstResul, Short)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(NumeracionAutoPartidas, Boolean)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(UltimaPartida, Integer)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(PermisoDescuadre, Boolean)
            If (Ejecutivo1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Ejecutivo1, String)
            End If
            If (Cargo1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Cargo1, String)
            End If
            If (Ejecutivo2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Ejecutivo2, String)
            End If
            If (Cargo2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Cargo2, String)
            End If
            If (Ejecutivo3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Ejecutivo3, String)
            End If
            If (Cargo3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(Cargo3, String)
            End If
            Me.Adapter.InsertCommand.Parameters(40).Value = CType(MostrarEjecutivos, Boolean)
            Me.Adapter.InsertCommand.Parameters(41).Value = CType(RellenoCerosNiveles, Short)
            Me.Adapter.InsertCommand.Parameters(42).Value = CType(CatalogoCreado, Boolean)
            If (TipoPresupuesto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TipoPresupuesto")
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(TipoPresupuesto, String)
            End If
            Me.Adapter.InsertCommand.Parameters(44).Value = CType(PresupuestoPorGenero, Boolean)
            If (TituloMoneda Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(TituloMoneda, String)
            End If
            If (TituloCambioMoneda Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(TituloCambioMoneda, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal AñoEnProceso As Short, _
                    ByVal MesEnProceso As Short, _
                    ByVal MesDeCierre As Short, _
                    ByVal FechaProceso As Date, _
                    ByVal AñoComparacion1 As Short, _
                    ByVal AñoComparacion2 As Short, _
                    ByVal IndiceActivos As Short, _
                    ByVal IndicePasivos As Short, _
                    ByVal IndiceCapital As Short, _
                    ByVal IndiceIngresos As Short, _
                    ByVal IndiceCostos As Short, _
                    ByVal IndiceGastos As Short, _
                    ByVal IndiceOrden As Short, _
                    ByVal Niveles As Short, _
                    ByVal DigitosNivel1 As Short, _
                    ByVal DigitosNivel2 As Short, _
                    ByVal DigitosNivel3 As Short, _
                    ByVal DigitosNivel4 As Short, _
                    ByVal DigitosNivel5 As Short, _
                    ByVal DigitosNivel6 As Short, _
                    ByVal DigitosNivel7 As Short, _
                    ByVal DigitosNivel8 As Short, _
                    ByVal DigitosNivel9 As Short, _
                    ByVal DigitosNivel10 As Short, _
                    ByVal FormatoLibre As Boolean, _
                    ByVal NivelActivoRepBalGen As Short, _
                    ByVal NivelPasivoRepBalGen As Short, _
                    ByVal NivelCapitalRepBalGen As Short, _
                    ByVal NivelIngresosRepEstResul As Short, _
                    ByVal NivelCostosRepEstResul As Short, _
                    ByVal NivelGastosRepEstResul As Short, _
                    ByVal NumeracionAutoPartidas As Boolean, _
                    ByVal UltimaPartida As Integer, _
                    ByVal PermisoDescuadre As Boolean, _
                    ByVal Ejecutivo1 As String, _
                    ByVal Cargo1 As String, _
                    ByVal Ejecutivo2 As String, _
                    ByVal Cargo2 As String, _
                    ByVal Ejecutivo3 As String, _
                    ByVal Cargo3 As String, _
                    ByVal MostrarEjecutivos As Boolean, _
                    ByVal RellenoCerosNiveles As Short, _
                    ByVal CatalogoCreado As Boolean, _
                    ByVal TipoPresupuesto As String, _
                    ByVal PresupuestoPorGenero As Boolean, _
                    ByVal TituloMoneda As String, _
                    ByVal TituloCambioMoneda As String, _
                    ByVal Original_Id As Integer, _
                    ByVal Original_AñoEnProceso As Short, _
                    ByVal Original_MesEnProceso As Short, _
                    ByVal Original_MesDeCierre As Short, _
                    ByVal Original_FechaProceso As Date, _
                    ByVal Original_AñoComparacion1 As Short, _
                    ByVal Original_AñoComparacion2 As Short, _
                    ByVal Original_IndiceActivos As Short, _
                    ByVal Original_IndicePasivos As Short, _
                    ByVal Original_IndiceCapital As Short, _
                    ByVal Original_IndiceIngresos As Short, _
                    ByVal Original_IndiceCostos As Short, _
                    ByVal Original_IndiceGastos As Short, _
                    ByVal Original_IndiceOrden As Short, _
                    ByVal Original_Niveles As Short, _
                    ByVal Original_DigitosNivel1 As Short, _
                    ByVal Original_DigitosNivel2 As Short, _
                    ByVal Original_DigitosNivel3 As Short, _
                    ByVal Original_DigitosNivel4 As Short, _
                    ByVal Original_DigitosNivel5 As Short, _
                    ByVal Original_DigitosNivel6 As Short, _
                    ByVal Original_DigitosNivel7 As Short, _
                    ByVal Original_DigitosNivel8 As Short, _
                    ByVal Original_DigitosNivel9 As Short, _
                    ByVal Original_DigitosNivel10 As Short, _
                    ByVal Original_FormatoLibre As Boolean, _
                    ByVal Original_NivelActivoRepBalGen As Short, _
                    ByVal Original_NivelPasivoRepBalGen As Short, _
                    ByVal Original_NivelCapitalRepBalGen As Short, _
                    ByVal Original_NivelIngresosRepEstResul As Short, _
                    ByVal Original_NivelCostosRepEstResul As Short, _
                    ByVal Original_NivelGastosRepEstResul As Short, _
                    ByVal Original_NumeracionAutoPartidas As Boolean, _
                    ByVal Original_UltimaPartida As Integer, _
                    ByVal Original_PermisoDescuadre As Boolean, _
                    ByVal Original_Ejecutivo1 As String, _
                    ByVal Original_Cargo1 As String, _
                    ByVal Original_Ejecutivo2 As String, _
                    ByVal Original_Cargo2 As String, _
                    ByVal Original_Ejecutivo3 As String, _
                    ByVal Original_Cargo3 As String, _
                    ByVal Original_MostrarEjecutivos As Boolean, _
                    ByVal Original_RellenoCerosNiveles As Short, _
                    ByVal Original_CatalogoCreado As Boolean, _
                    ByVal Original_TipoPresupuesto As String, _
                    ByVal Original_PresupuestoPorGenero As Boolean, _
                    ByVal Original_TituloMoneda As String, _
                    ByVal Original_TituloCambioMoneda As String, _
                    ByVal Id As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(AñoEnProceso, Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(MesEnProceso, Short)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(MesDeCierre, Short)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FechaProceso, Date)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(AñoComparacion1, Short)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(AñoComparacion2, Short)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(IndiceActivos, Short)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(IndicePasivos, Short)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(IndiceCapital, Short)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(IndiceIngresos, Short)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(IndiceCostos, Short)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(IndiceGastos, Short)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(IndiceOrden, Short)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Niveles, Short)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(DigitosNivel1, Short)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(DigitosNivel2, Short)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(DigitosNivel3, Short)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(DigitosNivel4, Short)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(DigitosNivel5, Short)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(DigitosNivel6, Short)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(DigitosNivel7, Short)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(DigitosNivel8, Short)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(DigitosNivel9, Short)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(DigitosNivel10, Short)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(FormatoLibre, Boolean)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(NivelActivoRepBalGen, Short)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(NivelPasivoRepBalGen, Short)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(NivelCapitalRepBalGen, Short)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(NivelIngresosRepEstResul, Short)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(NivelCostosRepEstResul, Short)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(NivelGastosRepEstResul, Short)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(NumeracionAutoPartidas, Boolean)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(UltimaPartida, Integer)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(PermisoDescuadre, Boolean)
            If (Ejecutivo1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Ejecutivo1, String)
            End If
            If (Cargo1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Cargo1, String)
            End If
            If (Ejecutivo2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Ejecutivo2, String)
            End If
            If (Cargo2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Cargo2, String)
            End If
            If (Ejecutivo3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Ejecutivo3, String)
            End If
            If (Cargo3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Cargo3, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(MostrarEjecutivos, Boolean)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(RellenoCerosNiveles, Short)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(CatalogoCreado, Boolean)
            If (TipoPresupuesto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TipoPresupuesto")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(TipoPresupuesto, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(PresupuestoPorGenero, Boolean)
            If (TituloMoneda Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(TituloMoneda, String)
            End If
            If (TituloCambioMoneda Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(TituloCambioMoneda, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_Id, Integer)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_AñoEnProceso, Short)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_MesEnProceso, Short)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_MesDeCierre, Short)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_FechaProceso, Date)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_AñoComparacion1, Short)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_AñoComparacion2, Short)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_IndiceActivos, Short)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_IndicePasivos, Short)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_IndiceCapital, Short)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_IndiceIngresos, Short)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_IndiceCostos, Short)
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_IndiceGastos, Short)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_IndiceOrden, Short)
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_Niveles, Short)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_DigitosNivel1, Short)
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_DigitosNivel2, Short)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_DigitosNivel3, Short)
            Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_DigitosNivel4, Short)
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_DigitosNivel5, Short)
            Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_DigitosNivel6, Short)
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_DigitosNivel7, Short)
            Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_DigitosNivel8, Short)
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_DigitosNivel9, Short)
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_DigitosNivel10, Short)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_FormatoLibre, Boolean)
            Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_NivelActivoRepBalGen, Short)
            Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_NivelPasivoRepBalGen, Short)
            Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_NivelCapitalRepBalGen, Short)
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_NivelIngresosRepEstResul, Short)
            Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_NivelCostosRepEstResul, Short)
            Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_NivelGastosRepEstResul, Short)
            Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_NumeracionAutoPartidas, Boolean)
            Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_UltimaPartida, Integer)
            Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_PermisoDescuadre, Boolean)
            If (Original_Ejecutivo1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_Ejecutivo1, String)
            End If
            If (Original_Cargo1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_Cargo1, String)
            End If
            If (Original_Ejecutivo2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_Ejecutivo2, String)
            End If
            If (Original_Cargo2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_Cargo2, String)
            End If
            If (Original_Ejecutivo3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_Ejecutivo3, String)
            End If
            If (Original_Cargo3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_Cargo3, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_MostrarEjecutivos, Boolean)
            Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_RellenoCerosNiveles, Short)
            Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_CatalogoCreado, Boolean)
            If (Original_TipoPresupuesto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TipoPresupuesto")
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_TipoPresupuesto, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_PresupuestoPorGenero, Boolean)
            If (Original_TituloMoneda Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_TituloMoneda, String)
            End If
            If (Original_TituloCambioMoneda Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1, Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0, Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_TituloCambioMoneda, String)
            End If
            Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Id, Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close()
                End If
            End Try
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, True)> _
        Public Overridable Overloads Function Update( _
                    ByVal AñoEnProceso As Short, _
                    ByVal MesEnProceso As Short, _
                    ByVal MesDeCierre As Short, _
                    ByVal FechaProceso As Date, _
                    ByVal AñoComparacion1 As Short, _
                    ByVal AñoComparacion2 As Short, _
                    ByVal IndiceActivos As Short, _
                    ByVal IndicePasivos As Short, _
                    ByVal IndiceCapital As Short, _
                    ByVal IndiceIngresos As Short, _
                    ByVal IndiceCostos As Short, _
                    ByVal IndiceGastos As Short, _
                    ByVal IndiceOrden As Short, _
                    ByVal Niveles As Short, _
                    ByVal DigitosNivel1 As Short, _
                    ByVal DigitosNivel2 As Short, _
                    ByVal DigitosNivel3 As Short, _
                    ByVal DigitosNivel4 As Short, _
                    ByVal DigitosNivel5 As Short, _
                    ByVal DigitosNivel6 As Short, _
                    ByVal DigitosNivel7 As Short, _
                    ByVal DigitosNivel8 As Short, _
                    ByVal DigitosNivel9 As Short, _
                    ByVal DigitosNivel10 As Short, _
                    ByVal FormatoLibre As Boolean, _
                    ByVal NivelActivoRepBalGen As Short, _
                    ByVal NivelPasivoRepBalGen As Short, _
                    ByVal NivelCapitalRepBalGen As Short, _
                    ByVal NivelIngresosRepEstResul As Short, _
                    ByVal NivelCostosRepEstResul As Short, _
                    ByVal NivelGastosRepEstResul As Short, _
                    ByVal NumeracionAutoPartidas As Boolean, _
                    ByVal UltimaPartida As Integer, _
                    ByVal PermisoDescuadre As Boolean, _
                    ByVal Ejecutivo1 As String, _
                    ByVal Cargo1 As String, _
                    ByVal Ejecutivo2 As String, _
                    ByVal Cargo2 As String, _
                    ByVal Ejecutivo3 As String, _
                    ByVal Cargo3 As String, _
                    ByVal MostrarEjecutivos As Boolean, _
                    ByVal RellenoCerosNiveles As Short, _
                    ByVal CatalogoCreado As Boolean, _
                    ByVal TipoPresupuesto As String, _
                    ByVal PresupuestoPorGenero As Boolean, _
                    ByVal TituloMoneda As String, _
                    ByVal TituloCambioMoneda As String, _
                    ByVal Original_Id As Integer, _
                    ByVal Original_AñoEnProceso As Short, _
                    ByVal Original_MesEnProceso As Short, _
                    ByVal Original_MesDeCierre As Short, _
                    ByVal Original_FechaProceso As Date, _
                    ByVal Original_AñoComparacion1 As Short, _
                    ByVal Original_AñoComparacion2 As Short, _
                    ByVal Original_IndiceActivos As Short, _
                    ByVal Original_IndicePasivos As Short, _
                    ByVal Original_IndiceCapital As Short, _
                    ByVal Original_IndiceIngresos As Short, _
                    ByVal Original_IndiceCostos As Short, _
                    ByVal Original_IndiceGastos As Short, _
                    ByVal Original_IndiceOrden As Short, _
                    ByVal Original_Niveles As Short, _
                    ByVal Original_DigitosNivel1 As Short, _
                    ByVal Original_DigitosNivel2 As Short, _
                    ByVal Original_DigitosNivel3 As Short, _
                    ByVal Original_DigitosNivel4 As Short, _
                    ByVal Original_DigitosNivel5 As Short, _
                    ByVal Original_DigitosNivel6 As Short, _
                    ByVal Original_DigitosNivel7 As Short, _
                    ByVal Original_DigitosNivel8 As Short, _
                    ByVal Original_DigitosNivel9 As Short, _
                    ByVal Original_DigitosNivel10 As Short, _
                    ByVal Original_FormatoLibre As Boolean, _
                    ByVal Original_NivelActivoRepBalGen As Short, _
                    ByVal Original_NivelPasivoRepBalGen As Short, _
                    ByVal Original_NivelCapitalRepBalGen As Short, _
                    ByVal Original_NivelIngresosRepEstResul As Short, _
                    ByVal Original_NivelCostosRepEstResul As Short, _
                    ByVal Original_NivelGastosRepEstResul As Short, _
                    ByVal Original_NumeracionAutoPartidas As Boolean, _
                    ByVal Original_UltimaPartida As Integer, _
                    ByVal Original_PermisoDescuadre As Boolean, _
                    ByVal Original_Ejecutivo1 As String, _
                    ByVal Original_Cargo1 As String, _
                    ByVal Original_Ejecutivo2 As String, _
                    ByVal Original_Cargo2 As String, _
                    ByVal Original_Ejecutivo3 As String, _
                    ByVal Original_Cargo3 As String, _
                    ByVal Original_MostrarEjecutivos As Boolean, _
                    ByVal Original_RellenoCerosNiveles As Short, _
                    ByVal Original_CatalogoCreado As Boolean, _
                    ByVal Original_TipoPresupuesto As String, _
                    ByVal Original_PresupuestoPorGenero As Boolean, _
                    ByVal Original_TituloMoneda As String, _
                    ByVal Original_TituloCambioMoneda As String) As Integer
            Return Me.Update(AñoEnProceso, MesEnProceso, MesDeCierre, FechaProceso, AñoComparacion1, AñoComparacion2, IndiceActivos, IndicePasivos, IndiceCapital, IndiceIngresos, IndiceCostos, IndiceGastos, IndiceOrden, Niveles, DigitosNivel1, DigitosNivel2, DigitosNivel3, DigitosNivel4, DigitosNivel5, DigitosNivel6, DigitosNivel7, DigitosNivel8, DigitosNivel9, DigitosNivel10, FormatoLibre, NivelActivoRepBalGen, NivelPasivoRepBalGen, NivelCapitalRepBalGen, NivelIngresosRepEstResul, NivelCostosRepEstResul, NivelGastosRepEstResul, NumeracionAutoPartidas, UltimaPartida, PermisoDescuadre, Ejecutivo1, Cargo1, Ejecutivo2, Cargo2, Ejecutivo3, Cargo3, MostrarEjecutivos, RellenoCerosNiveles, CatalogoCreado, TipoPresupuesto, PresupuestoPorGenero, TituloMoneda, TituloCambioMoneda, Original_Id, Original_AñoEnProceso, Original_MesEnProceso, Original_MesDeCierre, Original_FechaProceso, Original_AñoComparacion1, Original_AñoComparacion2, Original_IndiceActivos, Original_IndicePasivos, Original_IndiceCapital, Original_IndiceIngresos, Original_IndiceCostos, Original_IndiceGastos, Original_IndiceOrden, Original_Niveles, Original_DigitosNivel1, Original_DigitosNivel2, Original_DigitosNivel3, Original_DigitosNivel4, Original_DigitosNivel5, Original_DigitosNivel6, Original_DigitosNivel7, Original_DigitosNivel8, Original_DigitosNivel9, Original_DigitosNivel10, Original_FormatoLibre, Original_NivelActivoRepBalGen, Original_NivelPasivoRepBalGen, Original_NivelCapitalRepBalGen, Original_NivelIngresosRepEstResul, Original_NivelCostosRepEstResul, Original_NivelGastosRepEstResul, Original_NumeracionAutoPartidas, Original_UltimaPartida, Original_PermisoDescuadre, Original_Ejecutivo1, Original_Cargo1, Original_Ejecutivo2, Original_Cargo2, Original_Ejecutivo3, Original_Cargo3, Original_MostrarEjecutivos, Original_RellenoCerosNiveles, Original_CatalogoCreado, Original_TipoPresupuesto, Original_PresupuestoPorGenero, Original_TituloMoneda, Original_TituloCambioMoneda, Original_Id)
        End Function
    End Class

    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" & _
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")> _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component

        Private _updateOrder As UpdateOrderOption

        Private _cTConfTableAdapter As CTConfTableAdapter

        Private _backupDataSetBeforeUpdate As Boolean

        Private _connection As Global.System.Data.IDbConnection

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set(value As UpdateOrderOption)
                Me._updateOrder = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" & _
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" & _
            "a", "System.Drawing.Design.UITypeEditor")> _
        Public Property CTConfTableAdapter() As CTConfTableAdapter
            Get
                Return Me._cTConfTableAdapter
            End Get
            Set(value As CTConfTableAdapter)
                Me._cTConfTableAdapter = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set(value As Boolean)
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._cTConfTableAdapter) Is Nothing) _
                            AndAlso (Not (Me._cTConfTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cTConfTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set(value As Global.System.Data.IDbConnection)
                Me._connection = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._cTConfTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property

        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateUpdatedRows(ByVal dataSet As CTConfDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cTConfTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CTConf.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing) _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cTConfTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateInsertedRows(ByVal dataSet As CTConfDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cTConfTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CTConf.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing) _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cTConfTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateDeletedRows(ByVal dataSet As CTConfDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cTConfTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CTConf.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing) _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cTConfTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function

        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing) _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing) _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = False) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function

        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function UpdateAll(ByVal dataSet As CTConfDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = False) Then
                Return 0
            End If
            If ((Not (Me._cTConfTableAdapter) Is Nothing) _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cTConfTableAdapter.Connection) = False)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" & _
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" & _
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = False
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken) _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close()
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open()
                workConnOpened = True
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" & _
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try
                '---- Prepare for update -----------
                '
                If (Not (Me._cTConfTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cTConfTableAdapter, Me._cTConfTableAdapter.Connection)
                    Me._cTConfTableAdapter.Connection = CType(workConnection, Global.System.Data.SqlClient.SqlConnection)
                    Me._cTConfTableAdapter.Transaction = CType(workTransaction, Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cTConfTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cTConfTableAdapter.Adapter.AcceptChangesDuringUpdate = False
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cTConfTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit()
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback()
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear()
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges()
                            row.SetAdded()
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close()
                End If
                If (Not (Me._cTConfTableAdapter) Is Nothing) Then
                    Me._cTConfTableAdapter.Connection = CType(revertConnections(Me._cTConfTableAdapter), Global.System.Data.SqlClient.SqlConnection)
                    Me._cTConfTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = True
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return True
            End If
            If ((Me.Connection Is Nothing) _
                        OrElse (inputConnection Is Nothing)) Then
                Return True
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return True
            End If
            Return False
        End Function

        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Enum UpdateOrderOption

            InsertUpdateDelete = 0

            UpdateInsertDelete = 1
        End Enum

        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)

            Private _relation As Global.System.Data.DataRelation

            Private _childFirst As Integer

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New()
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing) _
                            AndAlso (traversedRows.ContainsKey(parent) = False))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear()
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing) _
                                AndAlso (traversedRows.ContainsKey(parent) = False))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing) _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
